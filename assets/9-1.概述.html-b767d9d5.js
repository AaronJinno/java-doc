import{_ as a,o as i,c as e,e as l}from"./app-a9d52fc3.js";const r="/java-doc/img/java/javase/9-1-1.jpg",t="/java-doc/img/java/javase/9-1-2.jpg",n={},d=l('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>更多网络编程内容详见：通信协议和JavaWeb</p></div><h4 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h4><p>Java是 Internet 上的语言，它从语言级上提供了对网络应用程序的支持，程序员能够很容易开发常见的网络应用程序。</p><p>Java提供的网络类库，可以实现无痛的网络连接，联网的底层细节被隐藏在 Java 的本机安装系统里，由 JVM 进行控制。并且 Java 实现了一个跨平台的网络库， 程序员面对的是一个统一的网络编程环境。</p><h4 id="_1-网络基础" tabindex="-1"><a class="header-anchor" href="#_1-网络基础" aria-hidden="true">#</a> 1. 网络基础</h4><ul><li>计算机网络：把分布在不同地理区域的计算机与专门的外部设备用通信线路互连成一个规模大、功能强的网络系统，从而使众多的计算机可以方便地互相传递信息、共享硬件、软件、数据信息等资源。</li><li>网络编程的目的：直接或间接地通过网络协议与 其它计算机实现数据交换，进行通讯。</li><li>网络编程中的主要问题 <ul><li>如何 准确地定位网络上一台或多台主机；定位主机上的特定的应用</li><li>找到主机后如何可靠高效地进行数据传输</li></ul></li></ul><h4 id="_2-网络通信的要素" tabindex="-1"><a class="header-anchor" href="#_2-网络通信的要素" aria-hidden="true">#</a> 2. 网络通信的要素</h4><ul><li>IP和端口号：解决如何找到和定位主机</li><li>网络通信协议：解决如何高效的进行数据传输</li></ul><h4 id="_3-如何实现网络通信" tabindex="-1"><a class="header-anchor" href="#_3-如何实现网络通信" aria-hidden="true">#</a> 3. 如何实现网络通信</h4><ul><li>通信双方的地址：IP、端口号</li><li>一定的规则：网络通信协议 <ul><li>OSI参考模型：模型过于理想化，未能在因特网上进行广泛推广</li><li>TCP/IP参考模型(或TCP/IP协议)：事实上的国际标准。</li></ul></li></ul><h4 id="_4-网络通信协议" tabindex="-1"><a class="header-anchor" href="#_4-网络通信协议" aria-hidden="true">#</a> 4. 网络通信协议</h4><figure><img src="'+r+'" alt="9-1-1" tabindex="0" loading="lazy"><figcaption>9-1-1</figcaption></figure><h4 id="_5-通信过程" tabindex="-1"><a class="header-anchor" href="#_5-通信过程" aria-hidden="true">#</a> 5. 通信过程</h4><figure><img src="'+t+'" alt="9-1-2" tabindex="0" loading="lazy"><figcaption>9-1-2</figcaption></figure>',14),c=[d];function h(s,o){return i(),e("div",null,c)}const u=a(n,[["render",h],["__file","9-1.概述.html.vue"]]);export{u as default};
