import{_ as n,o as s,c as a,e as t}from"./app-385ffbff.js";const e={},p=t(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>文档（document）的数据结构和 JSON 基本一样。<br> 所有存储在集合中的数据都是 BSON 格式。</p></div><h2 id="i-文档的插入" tabindex="-1"><a class="header-anchor" href="#i-文档的插入" aria-hidden="true">#</a> Ⅰ. 文档的插入</h2><h4 id="_1-单个文档插入" tabindex="-1"><a class="header-anchor" href="#_1-单个文档插入" aria-hidden="true">#</a> 1. 单个文档插入</h4><p>使用insertOne() 或 save() 方法向集合中插入文档。<br> PS：如果指定的集合不存在就会自动创建集合（集合的隐式创建）。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>document or array <span class="token keyword">of</span> documents<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">writeConcern</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ordered</span><span class="token operator">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-1-参数" tabindex="-1"><a class="header-anchor" href="#_1-1-参数" aria-hidden="true">#</a> 1.1 参数</h5><ul><li>document：要插入到集合中的文档或文档数组。（(json格式）</li><li>writeConcern：可选，性能和可靠性的级别。</li><li>ordered：可选，如果为true（默认），则按顺序插入数组中的文档，如果其中一个文档出现错误，MongoDB将返回而不处理数组中的其余文档。如果为假，则执行无序插入，如果其中一个文档出现错误，则继续处理数组中的主文档。</li></ul><h5 id="_1-2-示例" tabindex="-1"><a class="header-anchor" href="#_1-2-示例" aria-hidden="true">#</a> 1.2 示例</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;10000&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;that&#39;s good&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token keyword">null</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//执行后，返回如下对象</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">acknowledged</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">insertedId</span><span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6432843354a1d1820aa07159&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-注意" tabindex="-1"><a class="header-anchor" href="#_1-3-注意" aria-hidden="true">#</a> 1.3 注意</h5><ul><li>comment集合如果不存在，则会隐式创建</li><li>mongo中的数字，默认情况下是double类型，如果要存整型，必须使用函数NumberInt(整型数字)，否则取出来就有问题了。</li><li>插入当前日期使用 new Date()</li><li>插入的数据没有指定 _id ，会自动生成主键值</li><li>如果某字段没值，可以赋值为null，或不写该字段。</li><li>writeConcern和ordered两个参数一般不用管</li></ul><h4 id="_2-批量插入" tabindex="-1"><a class="header-anchor" href="#_2-批量插入" aria-hidden="true">#</a> 2. 批量插入</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token operator">&lt;</span>document <span class="token number">1</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>document <span class="token number">2</span><span class="token operator">&gt;</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">writeConcern</span><span class="token operator">:</span><span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ordered</span><span class="token operator">:</span><span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-1-示例" tabindex="-1"><a class="header-anchor" href="#_2-1-示例" aria-hidden="true">#</a> 2.1 示例</h5><p>批量插入两条文章评论</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我们不应该把清晨浪费在手机上&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T22:08:15.522Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我夏天空腹喝凉开水，冬天喝温开水&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1005&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T23:58:51.485Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span>
 
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2-注意" tabindex="-1"><a class="header-anchor" href="#_2-2-注意" aria-hidden="true">#</a> 2.2 注意</h5><p>插入时指定了 _id ，则主键就是该值（实际开发时，一般不指定）。<br> 如果某条数据插入失败，将会终止插入，但已经插入成功的数据不会回滚掉。</p><h4 id="_3-try-catch插入" tabindex="-1"><a class="header-anchor" href="#_3-try-catch插入" aria-hidden="true">#</a> 3. try catch插入</h4><p>因为批量插入由于数据较多容易出现失败，因此，可以使用try catch进行异常捕捉处理。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span><span class="token punctuation">{</span>
    db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//这里是多条插入语句</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-文档键命名规范" tabindex="-1"><a class="header-anchor" href="#_4-文档键命名规范" aria-hidden="true">#</a> 4. 文档键命名规范</h4><ul><li>键不能含有\\0 (空字符)。这个字符用来表示键的结尾。</li><li>.和<code>$</code>有特别的意义，只有在特定环境下才能使用。</li><li>以下划线&quot;_&quot;开头的键是保留的(不是严格要求的)。</li></ul><h2 id="ii-更新文档" tabindex="-1"><a class="header-anchor" href="#ii-更新文档" aria-hidden="true">#</a> Ⅱ. 更新文档</h2><p>使用update方法更新文档。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> update<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>query：待更新的文档，可以直接指定_id，也可以使用查询语句</li><li>update：要更新的内容</li><li>options：更新选项</li></ul><h4 id="_1-options选项" tabindex="-1"><a class="header-anchor" href="#_1-options选项" aria-hidden="true">#</a> 1. options选项</h4><p>options里有很多选项，控制了更新的细节，一般只需关注前两个。</p><ul><li>upsert：[boolean]，可选，true表示没有与查询条件匹配的文档时创建新文档。默认值为false，如果找不到匹配项，则不会插入新文档。</li><li>multi：[boolean]，可选，设置为true，则更新符合查询条件的多个文档。如果设置为false，则更新一个文档。默认值为false。</li><li>writeConcern：可选。表示写问题的文档。抛出异常的级别。</li><li>collation：可选。指定要用于操作的校对规则。校对规则允许用户为字符串比较指定特定于语言的规则，例如字母大小写和重音标记的规则。</li></ul><h4 id="_2-更新指定字段" tabindex="-1"><a class="header-anchor" href="#_2-更新指定字段" aria-hidden="true">#</a> 2. 更新指定字段</h4><div class="hint-container danger"><p class="hint-container-title">警告</p><p>MogonDB 6.0.0+ 经过实测，已经不支持覆盖更新了,只能使用<code>$set</code>修改器进行更新</p></div><p>使用<code>$set</code>修改器，更新指定的字段(单个或多个)，</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">articleid</span><span class="token operator">:</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">createdatetime</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T23:58:51.485Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">likenum</span><span class="token operator">:</span> <span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-批量更新" tabindex="-1"><a class="header-anchor" href="#_3-批量更新" aria-hidden="true">#</a> 3. 批量更新</h5><p>当query中有多条符合需要的文档记录时，默认只会更新第一条。<br> 若想全部更新，需要使用options中的multi选项</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1000&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
       <span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">articleid</span><span class="token operator">:</span><span class="token string">&quot;100000&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">multi</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-列值增长的修改" tabindex="-1"><a class="header-anchor" href="#_4-列值增长的修改" aria-hidden="true">#</a> 4. 列值增长的修改</h4><p>如果我们想实现对某列值在原有值的基础上进行增加或减少，可以使用 <code>$inc</code> 运算符来实现。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-删除文档" tabindex="-1"><a class="header-anchor" href="#iii-删除文档" aria-hidden="true">#</a> Ⅲ. 删除文档</h2><h4 id="_1-移除全部数据" tabindex="-1"><a class="header-anchor" href="#_1-移除全部数据" aria-hidden="true">#</a> 1. 移除全部数据</h4><p>将所有的数据都删除，！！！慎用！！。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-删除指定数据" tabindex="-1"><a class="header-anchor" href="#_2-删除指定数据" aria-hidden="true">#</a> 2. 删除指定数据</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.集合名称.remove({条件})
db.comment.remove({_id:&quot;1&quot;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,46),o=[p];function i(c,l){return s(),a("div",null,o)}const u=n(e,[["render",i],["__file","1-5.文档增删改.html.vue"]]);export{u as default};
