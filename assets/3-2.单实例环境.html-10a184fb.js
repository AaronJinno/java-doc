import{_ as n,o as s,c as a,e}from"./app-a9ffbbba.js";const t="/java-doc/img/sql/mongodb/3-2-1.png",p="/java-doc/img/sql/mongodb/3-2-2.png",i={},o=e(`<h2 id="i-管理用户" tabindex="-1"><a class="header-anchor" href="#i-管理用户" aria-hidden="true">#</a> Ⅰ. 管理用户</h2><h4 id="_1-createuser" tabindex="-1"><a class="header-anchor" href="#_1-createuser" aria-hidden="true">#</a> 1. createUser</h4><p>创建用户需要使用db.createUser方法，该方法有一个对象参数。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>admin<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        user: <span class="token string">&quot;admin&quot;</span>, <span class="token comment"># 用户名</span>
        pwd: <span class="token string">&quot;123456&quot;</span>, <span class="token comment"># 设置密码</span>
        customData:<span class="token punctuation">{</span> <span class="token comment"># 账户描述信息，可选</span>
            <span class="token string">&quot;desc&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;this user is admin&quot;</span> 
        <span class="token punctuation">}</span>
        roles:<span class="token punctuation">[</span> <span class="token comment"># 设置角色，赋予权限</span>
            <span class="token punctuation">{</span>
                role:<span class="token string">&quot;root&quot;</span> <span class="token comment"># 赋予root角色</span>
                <span class="token comment"># db可选，默认在所有的数据库上都有效</span>
                db:<span class="token string">&quot;article&quot;</span> <span class="token comment"># 赋予角色所属的数据库 </span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token punctuation">{</span> ok: <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token comment"># 表示创建成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-创建用户示例" tabindex="-1"><a class="header-anchor" href="#_2-创建用户示例" aria-hidden="true">#</a> 2. 创建用户示例</h4><p>连接mongodb，use admin数据库，并创建以下三个账户</p><ul><li>myroot：系统超级用户，角色为root <ul><li>如果对安全要求很高，防止超管泄漏，则不要创建root超管用户。</li></ul></li><li>admin：admin库的管理用户，角色为userAdminAnyDatabase</li><li>blog：普通用户，仅能操作article数据库</li></ul><h5 id="_2-1-创建myroot" tabindex="-1"><a class="header-anchor" href="#_2-1-创建myroot" aria-hidden="true">#</a> 2.1 创建myroot</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>test<span class="token operator">&gt;</span> use admin
admin<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>user:<span class="token string">&#39;myroot&#39;</span>,pwd:<span class="token string">&#39;2ck23-5&#39;</span>,roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&#39;root&#39;</span>, db:<span class="token string">&#39;admin&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2-创建admin" tabindex="-1"><a class="header-anchor" href="#_2-2-创建admin" aria-hidden="true">#</a> 2.2 创建admin</h5><p>创建专门用来管理admin库的账号myadmin，只用来作为用户权限的管理。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use admin
db.createUser<span class="token punctuation">(</span>
  <span class="token punctuation">{</span>user:<span class="token string">&#39;admin&#39;</span>,pwd:<span class="token string">&#39;a123&#39;</span>, roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&#39;userAdminAnyDatabase&#39;</span>, db:<span class="token string">&#39;admin&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-3-创建普通用户" tabindex="-1"><a class="header-anchor" href="#_2-3-创建普通用户" aria-hidden="true">#</a> 2.3 创建普通用户</h5><p>创建普通用户可以在没有开启认证的时候添加，也可以在开启认证之后添加，但开启认证之后，必须使<br> 用有操作admin库的用户登录认证后才能操作。底层都是将用户信息保存在了admin数据库的集合<br> system.users中。</p><p>如下，创建一个仅能对article库进行读写的用户。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.createUser<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>user:<span class="token string">&quot;blog&quot;</span>,pwd:<span class="token string">&quot;1234&quot;</span>,roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&quot;readWrite&quot;</span>,db:<span class="token string">&quot;article&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-查看用户" tabindex="-1"><a class="header-anchor" href="#_3-查看用户" aria-hidden="true">#</a> 3. 查看用户</h4><div class="hint-container tip"><p class="hint-container-title">提示</p><p>和其它数据库（MySQL）一样，权限的管理都差不多一样，也是将用户和权限信息保存到数据库对<br> 应的表中。<br> Mongodb存储所有的用户信息在admin 数据库的集合system.users中，保存用户名、密码<br> 和数据库信息。<br> PS：这个集合是隐藏的，没法在Compass上直接看到，需要输入查看命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>admin<span class="token operator">&gt;</span> show collections
 system.users <span class="token comment"># 可以看到有两个隐藏的集合</span>
 system.version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>输入指令查看所有的用户信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>admin<span class="token operator">&gt;</span> db.system.users.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询的结果如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 第一个添加的用户: myroot</span>
<span class="token punctuation">{</span> 
  <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&#39;admin.myroot&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户id：admin.用户名</span>
  <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token constant">UUID</span><span class="token punctuation">(</span><span class="token string">&quot;a9898c75-ea87-4506-a2cf-30cee1936861&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;myroot&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户名</span>
  <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户所在的数据库</span>
  <span class="token literal-property property">credentials</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">// 加密 key</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">roles</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token comment">// 角色信息</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">role</span><span class="token operator">:</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span> <span class="token comment">//用户管理的数据库</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// 第二个添加的用户: admin</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&#39;admin.admin&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token constant">UUID</span><span class="token punctuation">(</span><span class="token string">&quot;3b994547-15ef-4cc1-9632-e676dd308382&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">credentials</span><span class="token operator">:</span><span class="token punctuation">{</span> 
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">roles</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token operator">...</span>
  <span class="token punctuation">]</span>

<span class="token comment">// 第三个添加的用户: blog</span>
  <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&#39;admin.blog&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">userId</span><span class="token operator">:</span> <span class="token constant">UUID</span><span class="token punctuation">(</span><span class="token string">&quot;c8710e95-2218-4032-9ef5-855ed8bca863&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;blog&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">credentials</span><span class="token operator">:</span><span class="token punctuation">{</span> 
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">roles</span><span class="token operator">:</span><span class="token punctuation">[</span>
     <span class="token punctuation">{</span>
      <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token string">&#39;readWrite&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">db</span><span class="token operator">:</span> <span class="token string">&#39;article&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-删除用户" tabindex="-1"><a class="header-anchor" href="#_4-删除用户" aria-hidden="true">#</a> 4. 删除用户</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span><span class="token function">dropUser</span><span class="token punctuation">(</span><span class="token string">&quot;用户名&quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">{</span> <span class="token literal-property property">ok</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token comment">// 表示操作成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-修改密码" tabindex="-1"><a class="header-anchor" href="#_5-修改密码" aria-hidden="true">#</a> 5. 修改密码</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span><span class="token function">changeUserPassword</span><span class="token punctuation">(</span><span class="token string">&quot;用户名&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;新密码&quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">{</span> <span class="token literal-property property">ok</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token comment">// 表示操作成功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-认证测试" tabindex="-1"><a class="header-anchor" href="#_6-认证测试" aria-hidden="true">#</a> 6. 认证测试</h4><p>并非真正的开启用户验证，只是测试下创建的账号。</p><p>注意：无论用户管理的数据库是哪个，该用户的信息都是存储在admin数据库的，因此需要在admin数据库下使用auth方法进行验证。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//一定要切到admin数据库，不如怎么验证都是失败</span>
use admin  

<span class="token comment">//先使用错误的用户名和密码</span>
admin<span class="token operator">&gt;</span> db<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;person&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;23d23&quot;</span><span class="token punctuation">)</span>
<span class="token literal-property property">报错：MongoServerError</span><span class="token operator">:</span>Authentication failed<span class="token punctuation">.</span>

<span class="token comment">//使用正确的用户名和密码</span>
db<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;blog&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1234&quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">{</span><span class="token literal-property property">ok</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span> <span class="token comment">//验证通过</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-开启认证" tabindex="-1"><a class="header-anchor" href="#ii-开启认证" aria-hidden="true">#</a> Ⅱ. 开启认证</h2><div class="hint-container danger"><p class="hint-container-title">警告</p><p>创建用户后，还要开启登录认证，不然创建的用户毫无意义。</p></div><h4 id="_1-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_1-修改配置文件" aria-hidden="true">#</a> 1. 修改配置文件</h4><p>修改mongod.conf配置文件，添加权限验证。</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>security:
    #开启授权认证
    authorization: enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时再启动服务，就开启了登录认证。</p><h4 id="_2-通过认证登录" tabindex="-1"><a class="header-anchor" href="#_2-通过认证登录" aria-hidden="true">#</a> 2. 通过认证登录</h4><p>不认证通过Compass直接登录，会报错：</p><p>An error occurred while loading instance info: command hostInfo requires authentication</p><h5 id="_2-1-登录时进行验证" tabindex="-1"><a class="header-anchor" href="#_2-1-登录时进行验证" aria-hidden="true">#</a> 2.1 登录时进行验证</h5><p>需要在登录时就选择进行权限验证：</p><figure><img src="`+t+'" alt="3-2-1" tabindex="0" loading="lazy"><figcaption>3-2-1</figcaption></figure><h5 id="_2-2-登录后的权限" tabindex="-1"><a class="header-anchor" href="#_2-2-登录后的权限" aria-hidden="true">#</a> 2.2 登录后的权限</h5><p>用什么账号登录，就有什么账号的权限，如上采用的blog账号，该账号仅能读写article库，因此登录后就只能看到article库，只能操作article库。</p><figure><img src="'+p+`" alt="3-2-2" tabindex="0" loading="lazy"><figcaption>3-2-2</figcaption></figure><h2 id="iii-关闭mongodb" tabindex="-1"><a class="header-anchor" href="#iii-关闭mongodb" aria-hidden="true">#</a> Ⅲ. 关闭MongoDB</h2><p>除了暴力kill进程，还可以使用命名关闭MongoDB服务。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>use admin
db<span class="token punctuation">.</span><span class="token function">shutdownServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>shutdownServer执行的条件</strong></p><ul><li>必须是在admin库下执行该关闭服务命令</li><li>如果没有开启认证，必须是从localhost登陆的，才能执行关闭服务命令</li><li>非localhost的、通过远程登录的，必须有登录且必须登录用户有对admin操作权限才可以</li></ul>`,50),l=[o];function c(r,d){return s(),a("div",null,l)}const v=n(i,[["render",c],["__file","3-2.单实例环境.html.vue"]]);export{v as default};
