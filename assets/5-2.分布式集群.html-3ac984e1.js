import{_ as s,o as n,c as a,e}from"./app-e33dd8dd.js";const t="/java-doc/img/sql/es/5-2-1.jpg",p={},o=e('<h2 id="系统架构" tabindex="-1"><a class="header-anchor" href="#系统架构" aria-hidden="true">#</a> 系统架构</h2><figure><img src="'+t+`" alt="5-2-1" tabindex="0" loading="lazy"><figcaption>5-2-1</figcaption></figure><p>如图：（节点数：3、分片数：2、备份数：1）</p><ul><li>节点：集群有三个节点，其中Node1是主节点 <ul><li>主节点在启动时根据配置指定，在运行中可以选举产生</li></ul></li><li>分片：索引被分片储存了，储存在了各个节点：P0、P1、P2 <ul><li>并非每个节点都有一个分片，而是根据规则创建，所以上图只有两个分片</li></ul></li><li>副本：每个分片都有自己的副本，P0-&gt;R0、P1-&gt;R1、P2-&gt;R2 <ul><li>副本跟被复制的分片肯定是不能在同一个节点的（高可用）</li><li>副本数量也不是和节点关联的，而且根据设置的规则创建，默认是1个副本</li></ul></li></ul><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>一个运行中的 Elasticsearch 实例称为一个节点，而集群是由一个或者多个拥有相同<br><code>cluster.name</code>（集群名） 配置的节点组成， 它们共同承担数据和负载的压力。</p><p>当有节点加入集群中或者从集群中移除节点时，集群将会重新平均分布所有的数据。</p><h4 id="_2-主节点" tabindex="-1"><a class="header-anchor" href="#_2-主节点" aria-hidden="true">#</a> 2. 主节点</h4><p>当一个节点被选举成为主节点时， 它将负责管理集群范围内的所有变更，例如增加、删除索引，或者增加、删除节点等。</p><p>主节点并不需要涉及到文档级别的变更和搜索等操作，所以当集群只拥有一个主节点的情况下，即使流量的增加它也不会成为瓶颈。 任何节点都可以成为主节点。</p><h4 id="_3-请求处理" tabindex="-1"><a class="header-anchor" href="#_3-请求处理" aria-hidden="true">#</a> 3. 请求处理</h4><ul><li>可以将请求发送到集群中的任何节点，包括主节点。</li><li>每个节点都知道任意文档所处的位置，并且能够将我们的请求直接转发到存储我们所需文档的节点。</li><li>无论我们将请求发送到哪个节点，它都能负责从各个包含我们所需文档的节点收集回数据，并将最终结果返回給客户端。 Elasticsearch 对这一切的管理都是透明的。</li></ul><h2 id="单节点集群" tabindex="-1"><a class="header-anchor" href="#单节点集群" aria-hidden="true">#</a> 单节点集群</h2><p>单节点集群指的是集群中只有一个节点，该节点内包含有多个分片和副本。实际开发中不会出现单节点集群，这里只是为了演示集群的原理。</p><h4 id="_1-创建单节点集群" tabindex="-1"><a class="header-anchor" href="#_1-创建单节点集群" aria-hidden="true">#</a> 1. 创建单节点集群</h4><p>创建单节点集群，并查看集群信息</p><p>GET请求<code>http://localhost:9300/_cluster/health</code>查看集群的节点信息，返回如下信息：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;cluster_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-es&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token comment">//状态为green</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_nodes&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//单节点</span>
    <span class="token property">&quot;number_of_data_nodes&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
    <span class="token comment">//分片信息都是0</span>
    <span class="token property">&quot;active_primary_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;relocating_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;initializing_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delayed_unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_pending_tasks&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_in_flight_fetch&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;task_max_waiting_in_queue_millis&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards_percent_as_number&quot;</span><span class="token operator">:</span> <span class="token number">100.0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-索引分片" tabindex="-1"><a class="header-anchor" href="#_2-索引分片" aria-hidden="true">#</a> 2. 索引分片</h4><p>创建完单节点集群后，创建名为 users 的索引，并将索引分成3个主分片和一份副本（每个主分片拥有一个副本分片）</p><p>通过PUT请求 <code>http://localhost:9300/user</code>创建索引，并通过以下请求体进行分片</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">//创建的分片数量</span>
        <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span><span class="token number">1</span> <span class="token comment">//创建的副本数量，每个分片都会有副本的</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建成功后，再次发送请求，查询节点信息</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;cluster_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-es&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">,</span> <span class="token comment">//状态为yellow</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;number_of_nodes&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//单节点</span>
    <span class="token property">&quot;number_of_data_nodes&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_primary_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">//主分片：3个</span>
    <span class="token property">&quot;active_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;relocating_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;initializing_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delayed_unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_pending_tasks&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_in_flight_fetch&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;task_max_waiting_in_queue_millis&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards_percent_as_number&quot;</span><span class="token operator">:</span> <span class="token number">50.0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-通过插件查看集群情况" tabindex="-1"><a class="header-anchor" href="#_3-通过插件查看集群情况" aria-hidden="true">#</a> 3. 通过插件查看集群情况</h4><h2 id="单点故障" tabindex="-1"><a class="header-anchor" href="#单点故障" aria-hidden="true">#</a> 单点故障</h2><h2 id="水平扩容" tabindex="-1"><a class="header-anchor" href="#水平扩容" aria-hidden="true">#</a> 水平扩容</h2><h2 id="集群故障处理" tabindex="-1"><a class="header-anchor" href="#集群故障处理" aria-hidden="true">#</a> 集群故障处理</h2><h2 id="hello" tabindex="-1"><a class="header-anchor" href="#hello" aria-hidden="true">#</a> hello</h2>`,29),r=[o];function l(i,c){return n(),a("div",null,r)}const d=s(p,[["render",l],["__file","5-2.分布式集群.html.vue"]]);export{d as default};
