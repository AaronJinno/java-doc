import{_ as n,o as s,c as a,e as t}from"./app-e2ee9004.js";const e="/java-doc/img/sql/es/2-1-1.jpg",p="/java-doc/img/sql/es/2-1-2.jpg",o={},i=t('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>ES是基于索引，索引相当于关系型数据库里的 库。</p></div><h2 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h2><p>对比关系型数据库，创建索引就等同于创建数据库。</p><p>创建方式：通过向ES服务器发送put请求来创建索引。</p><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. 语法</h4><ul><li>请求方式：put</li><li>请求地址：<code>http://ES服务器地址/要创建的索引名</code></li></ul><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h4><p>通过postman发送put请求，请求地址为：<code>http://localhost:9200/shopping</code></p><figure><img src="'+e+`" alt="2-1-1" tabindex="0" loading="lazy"><figcaption>2-1-1</figcaption></figure><p>请求成功后，就在ES服务器中创建了名为shopping的索引（库）。</p><h4 id="_3-响应结果分析" tabindex="-1"><a class="header-anchor" href="#_3-响应结果分析" aria-hidden="true">#</a> 3. 响应结果分析</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;acknowledged&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//响应结果，true表示成功</span>
    <span class="token property">&quot;shards_acknowledged&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//分片操作结果，true表示成功</span>
    <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span> <span class="token comment">//索引名称</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建索引库的分片数默认 1 片</p><h4 id="_4-put与post" tabindex="-1"><a class="header-anchor" href="#_4-put与post" aria-hidden="true">#</a> 4. put与post</h4><p>只能同put请求创建索引，不能通过post。使用post会报错。</p><p>put操作是幂等性的（post不是），如果重复创建相同的索引，也会报错。</p><h2 id="查看某个索引" tabindex="-1"><a class="header-anchor" href="#查看某个索引" aria-hidden="true">#</a> 查看某个索引</h2><p>查看索引向 ES 服务器发送的请求路径和创建索引是一致的。但是 HTTP 方法不一致。</p><p>通过向ES服务器发送GET请求，来查看索引。</p><h4 id="_1-语法-1" tabindex="-1"><a class="header-anchor" href="#_1-语法-1" aria-hidden="true">#</a> 1. 语法</h4><ul><li>请求方式：GET</li><li>请求地址：<code>http://ES服务器地址/要查看的索引名</code></li></ul><h4 id="_2-示例-1" tabindex="-1"><a class="header-anchor" href="#_2-示例-1" aria-hidden="true">#</a> 2. 示例</h4><p>通过postman发送GET请求，请求地址为：<code>http://localhost:9200/shopping</code></p><p>查看ES服务器上的shopping索引</p><h4 id="_3-响应信息解析" tabindex="-1"><a class="header-anchor" href="#_3-响应信息解析" aria-hidden="true">#</a> 3. 响应信息解析</h4><p>上述示例的响应信息如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;shopping&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//索引名</span>
        <span class="token property">&quot;aliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//别名</span>
        <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//映射</span>
        <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//设置</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//设置：索引</span>
                <span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//设置：索引-&gt;路由</span>
                    <span class="token property">&quot;allocation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                            <span class="token property">&quot;_tier_preference&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data_content&quot;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token comment">//设置：索引-&gt;主分片数量</span>
                <span class="token property">&quot;provided_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span> <span class="token comment">//设置：索引-&gt;名称</span>
                <span class="token property">&quot;creation_date&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1687746960161&quot;</span><span class="token punctuation">,</span> <span class="token comment">//设置：索引-&gt;创建时间</span>
                <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token comment">//设置：索引-&gt;副分片数量</span>
                <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;H6j6hlYfQDe8M4CCZpCniA&quot;</span><span class="token punctuation">,</span> <span class="token comment">//设置：索引-&gt;唯一标识</span>
                <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//设置：索引-&gt;版本</span>
                    <span class="token property">&quot;created&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8080199&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看所有索引" tabindex="-1"><a class="header-anchor" href="#查看所有索引" aria-hidden="true">#</a> 查看所有索引</h2><p>让ES服务器返回所有索引的基本信息。</p><h4 id="_1-语法-2" tabindex="-1"><a class="header-anchor" href="#_1-语法-2" aria-hidden="true">#</a> 1. 语法</h4><p>请求方式：GET<br> 请求地址：<code>http://ES服务器地址/_cat/indices?v</code></p><figure><img src="`+p+`" alt="2-1-2" tabindex="0" loading="lazy"><figcaption>2-1-2</figcaption></figure><p>返回的数据格式类似于一个表格</p><h4 id="_2-返回数据解析" tabindex="-1"><a class="header-anchor" href="#_2-返回数据解析" aria-hidden="true">#</a> 2. 返回数据解析</h4><table><thead><tr><th style="text-align:center;">表头</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">health</td><td style="text-align:center;">当前服务器健康状态：green(集群完整) yellow(单点正常、集群不完整) red(单点不正常)</td></tr><tr><td style="text-align:center;">status</td><td style="text-align:center;">索引打开、关闭状态</td></tr><tr><td style="text-align:center;">index</td><td style="text-align:center;">索引名</td></tr><tr><td style="text-align:center;">uuid</td><td style="text-align:center;">索引统一编号</td></tr><tr><td style="text-align:center;">pri</td><td style="text-align:center;">主分片数量</td></tr><tr><td style="text-align:center;">rep</td><td style="text-align:center;">副本数量</td></tr><tr><td style="text-align:center;">docs.count</td><td style="text-align:center;">可用文档数量</td></tr><tr><td style="text-align:center;">docs.deleted</td><td style="text-align:center;">文档删除状态（逻辑删除）</td></tr><tr><td style="text-align:center;">store.size</td><td style="text-align:center;">主分片和副分片整体占空间大小</td></tr><tr><td style="text-align:center;">pri.store.size</td><td style="text-align:center;">主分片占空间大小</td></tr></tbody></table><h2 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引" aria-hidden="true">#</a> 删除索引</h2><p>通过向ES发送DELETE请求，删除某个索引</p><h4 id="_1-语法-3" tabindex="-1"><a class="header-anchor" href="#_1-语法-3" aria-hidden="true">#</a> 1. 语法</h4><ul><li>请求方式：DELETE</li><li>请求地址：<code>http://ES服务器地址/要删除的索引名</code></li></ul><p>如果不指定索引名，直接删除，不会删除所有索引，而是会报错。</p><h4 id="_2-示例-2" tabindex="-1"><a class="header-anchor" href="#_2-示例-2" aria-hidden="true">#</a> 2. 示例</h4><p>通过postman向ES服务器发送DELETE请求，删除shopping索引</p><p>请求地址：<code>http://localhost:9200/shopping</code></p><p>返回值如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;acknowledged&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除不存在的索引（包括已经删除了的），会报错</p>`,46),c=[i];function l(r,d){return s(),a("div",null,c)}const h=n(o,[["render",l],["__file","2-1.索引.html.vue"]]);export{h as default};
