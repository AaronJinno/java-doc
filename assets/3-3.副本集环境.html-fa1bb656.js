import{_ as n,o as a,c as s,e}from"./app-b355f476.js";const i={},t=e(`<h4 id="_1-认证的内容" tabindex="-1"><a class="header-anchor" href="#_1-认证的内容" aria-hidden="true">#</a> 1. 认证的内容</h4><p>对于副本集，有两个地方需要进行权限认证：</p><ul><li>authorization：用户认证，和单实例的用户登录认证类似</li><li>keyFile：节点成员内部认证，副本集和共享集群的各个节点成员之间使用内部身份验证，一般采用的认证方式是x.509证书。 <ul><li>原理：集群中每一个实例彼此连接的时候都检验彼此使用的证书的内容是否相同。<br> 只有证书相同的实例彼此才可以访问</li></ul></li></ul><h4 id="_2-添加账号" tabindex="-1"><a class="header-anchor" href="#_2-添加账号" aria-hidden="true">#</a> 2. 添加账号</h4><p>登录主节点，添加一个管理员账号。<br> 只需要在主节点上添加用户，副本集会自动同步。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>myrs <span class="token punctuation">[</span>direct<span class="token operator">:</span>primary<span class="token punctuation">]</span> test<span class="token operator">&gt;</span> use admin
myrs <span class="token punctuation">[</span>direct<span class="token operator">:</span>primary<span class="token punctuation">]</span> admin<span class="token operator">&gt;</span> db<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">user</span><span class="token operator">:</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">pwd</span><span class="token operator">:</span><span class="token string">&quot;23cx@fdw&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">roles</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-创建x-509证书" tabindex="-1"><a class="header-anchor" href="#_3-创建x-509证书" aria-hidden="true">#</a> 3. 创建x.509证书</h4><h5 id="_3-1-通过openssl生成证书" tabindex="-1"><a class="header-anchor" href="#_3-1-通过openssl生成证书" aria-hidden="true">#</a> 3.1 通过openssl生成证书</h5><p>可以使用任何方法生成密钥文件，这里采用openssl生成密码文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 在当前目录生成证书</span>
openssl rand <span class="token parameter variable">-base64</span> <span class="token number">90</span> <span class="token operator">&gt;</span> ./mongo.keyfile

<span class="token comment"># 修改证书权限</span>
<span class="token function">chmod</span> <span class="token number">400</span> mongo.keyfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-复制证书" tabindex="-1"><a class="header-anchor" href="#_3-2-复制证书" aria-hidden="true">#</a> 3.2 复制证书</h5><p>赋值该证书到所有节点所在的设备，保证所有的副本集节点都使用同一份证书。</p><p>当前是在一台设备上模拟的副本集，因此拷贝到各自的目录即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> mongo.keyfile /opt/mongodb/sets/m27017/
<span class="token function">cp</span> mongo.keyfile /opt/mongodb/sets/m27018/
<span class="token function">cp</span> mongo.keyfile /opt/mongodb/sets/m27019/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_4-修改配置文件" aria-hidden="true">#</a> 4. 修改配置文件</h4><p>修改配置文件，添加开启authorization和keyFile鉴权的配置。</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>security:
    #KeyFile鉴权文件
    keyFile: /opt/mongodb/sets/m27017/mongo.keyfile
    #开启认证方式运行
    authorization: enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个节点都要修改，注意证书路径。</p><h4 id="_5-连接副本集" tabindex="-1"><a class="header-anchor" href="#_5-连接副本集" aria-hidden="true">#</a> 5. 连接副本集</h4><p>重启所有节点，并通过用户认证连接副本集。</p>`,20),o=[t];function p(r,l){return a(),s("div",null,o)}const d=n(i,[["render",p],["__file","3-3.副本集环境.html.vue"]]);export{d as default};
