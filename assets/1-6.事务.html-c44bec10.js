import{_ as n,o as s,c as a,e as t}from"./app-e2ee9004.js";const e={},p=t(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>详见：MySQL事务</p></div><h4 id="_1-jdbc事务处理方法" tabindex="-1"><a class="header-anchor" href="#_1-jdbc事务处理方法" aria-hidden="true">#</a> 1. JDBC事务处理方法</h4><p>以下三个方法都会抛出SQLException异常</p><h5 id="_1-1-setautocommit-设置事务的自动提交" tabindex="-1"><a class="header-anchor" href="#_1-1-setautocommit-设置事务的自动提交" aria-hidden="true">#</a> 1.1 setAutoCommit：设置事务的自动提交</h5><p>参数false表示关闭自动提交，true表示开启（默认）。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Connection</span><span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> autoCommit<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_1-2-commit-提交事务" tabindex="-1"><a class="header-anchor" href="#_1-2-commit-提交事务" aria-hidden="true">#</a> 1.2 commit：提交事务</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Connection</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_1-3-rollback-回滚事务" tabindex="-1"><a class="header-anchor" href="#_1-3-rollback-回滚事务" aria-hidden="true">#</a> 1.3 rollback：回滚事务</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Connection</span><span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-jdbc事务的处理流程" tabindex="-1"><a class="header-anchor" href="#_2-jdbc事务的处理流程" aria-hidden="true">#</a> 2. JDBC事务的处理流程</h4><p>数据一旦提交，就无法回滚了，因此应该将数据库连接，放到数据库更新方法的调用处，进行开启和关闭，而不应该放到数据库连接内部。</p><p>同时如果每个操作使用的是自己单独的连接，则无法保证事务，即同一个事务的多个操作必须在同一个连接下，因此数据库的连接和关闭必须放到数据库的操作方法调用处。</p><h5 id="连接池" tabindex="-1"><a class="header-anchor" href="#连接池" aria-hidden="true">#</a> 连接池</h5><p>当启用了连接池后，关闭连接时，并不是真正的关闭了链接，而是将数据库连接对象放到了联机池中，如果对该数据库连接对象设置了关闭自动提交，就必须在关闭连接前，将设置改回去，以便别的操作使用该数据库连接对象。</p><h4 id="_3-jdbc事务示例" tabindex="-1"><a class="header-anchor" href="#_3-jdbc事务示例" aria-hidden="true">#</a> 3. JDBC事务示例</h4><h5 id="_3-1-添加事务后-更改数据库通用的增删改方法" tabindex="-1"><a class="header-anchor" href="#_3-1-添加事务后-更改数据库通用的增删改方法" aria-hidden="true">#</a> 3.1 添加事务后：更改数据库通用的增删改方法</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updata</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> conn<span class="token punctuation">,</span><span class="token class-name">String</span> sql<span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.获取PreparedStatement的实例 (或：预编译sql语句)</span>
        ps <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.填充占位符</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> args<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ps<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3.执行sql语句 </span>
        ps<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//该操作执行后并不会提交</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment">// 4.关闭资源:第一个参数设置为null，不要关闭数据库连接</span>
        <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">closeResource</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> ps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-dml操作示例-使用事务" tabindex="-1"><a class="header-anchor" href="#_3-2-dml操作示例-使用事务" aria-hidden="true">#</a> 3.2 DML操作示例：使用事务</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJDBCTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.获取数据库连接</span>
        conn <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.开启事务</span>
        conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.进行数据库操作</span>
        <span class="token class-name">String</span> sql1 <span class="token operator">=</span> <span class="token string">&quot;update user_table set balance = balance - 100 where user = ?&quot;</span><span class="token punctuation">;</span>
        <span class="token function">update</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> sql1<span class="token punctuation">,</span> <span class="token string">&quot;AA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// 模拟网络异常</span>
        <span class="token comment">//System.out.println(10 / 0);</span>
        
        <span class="token class-name">String</span> sql2 <span class="token operator">=</span> <span class="token string">&quot;update user_table set balance = balance + 100 where user = ?&quot;</span><span class="token punctuation">;</span>
        <span class="token function">update</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> sql2<span class="token punctuation">,</span> <span class="token string">&quot;BB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.若没有异常，则提交事务</span>
        conn<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5.若有异常，则回滚事务</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            conn<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e1<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//6.恢复每次DML操作的自动提交功能：用于连接池</span>
            conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//7.关闭连接：将数据库连接关闭</span>
        <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">closeResource</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-jdbc控制隔离级别" tabindex="-1"><a class="header-anchor" href="#_3-jdbc控制隔离级别" aria-hidden="true">#</a> 3. JDBC控制隔离级别</h4><p>在JDBC中，即JAVA端，也能控制隔离级别，不过实际开发中，比如在框架中，都是通过配置文件进行控制的。</p><p>以下两个方法都会抛出SQLException</p><h5 id="_3-1-gettransactionisolation-获取当前隔离级别" tabindex="-1"><a class="header-anchor" href="#_3-1-gettransactionisolation-获取当前隔离级别" aria-hidden="true">#</a> 3.1 getTransactionIsolation：获取当前隔离级别</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Connection</span><span class="token punctuation">.</span><span class="token function">getTransactionIsolation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_3-2-settransactionisolation-设置数据库隔离级别" tabindex="-1"><a class="header-anchor" href="#_3-2-settransactionisolation-设置数据库隔离级别" aria-hidden="true">#</a> 3.2 setTransactionIsolation：设置数据库隔离级别</h5><p>参数是数字，也可以是隔离级别常量，对照如下：</p><ul><li>Connection.TRANSACTION_READ_UNCOMMITTED =1</li><li>Connection.TRANSACTION_READ_COMMITTED = 2；</li><li>Connection.TRANSACTION_REPEATABLE_READ = 3；</li><li>Connection.TRANSACTION_SERIALIZABLE = 4；</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Connection</span><span class="token punctuation">.</span><span class="token function">setTransactionIsolation</span><span class="token punctuation">(</span><span class="token keyword">int</span> level<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-jdbc控制隔离级别示例" tabindex="-1"><a class="header-anchor" href="#_4-jdbc控制隔离级别示例" aria-hidden="true">#</a> 4. JDBC控制隔离级别示例</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testTransactionSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
    <span class="token comment">//1.获取连接对象</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//2.获取当前连接的隔离级别</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span><span class="token function">getTransactionIsolation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//3.设置数据库的隔离级别：</span>
    conn<span class="token punctuation">.</span><span class="token function">setTransactionIsolation</span><span class="token punctuation">(</span><span class="token class-name">Connection</span><span class="token punctuation">.</span><span class="token constant">TRANSACTION_READ_COMMITTED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//4.取消自动提交数据</span>
    conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select user,password,balance from user_table where user = ?&quot;</span><span class="token punctuation">;</span>
    
    <span class="token comment">//5.调用查询方法</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token function">getInstance</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> sql<span class="token punctuation">,</span> <span class="token string">&quot;CC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(e,[["render",o],["__file","1-6.事务.html.vue"]]);export{d as default};
