const t=JSON.parse('{"key":"v-614d3b8e","path":"/java/javase/2.OOP/2-4.%E6%9E%84%E9%80%A0%E5%99%A8.html","title":"2-4. 构造器","lang":"zh-CN","frontmatter":{"title":"2-4. 构造器","date":"2023-06-03T00:00:00.000Z","description":"constructor 构造器，也叫构造方法，是java语言中类的一个成员。 1. 构造器的作用 1.1 创建对象 我们创建对象时进行的语法其实是调用的构造器（构造方法）：new+构造器。 1.2 给对象进行初始化 构造器可以带参数，创建对象时利用传参进行属性的初始化。 初始化：过滤，为属性赋值等。#### 2. 构造器的语法- 它具有与类相同的名称（...","head":[["meta",{"property":"og:url","content":"https://aicell.cc/java-doc/java/javase/2.OOP/2-4.%E6%9E%84%E9%80%A0%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"Java全栈"}],["meta",{"property":"og:title","content":"2-4. 构造器"}],["meta",{"property":"og:description","content":"constructor 构造器，也叫构造方法，是java语言中类的一个成员。 1. 构造器的作用 1.1 创建对象 我们创建对象时进行的语法其实是调用的构造器（构造方法）：new+构造器。 1.2 给对象进行初始化 构造器可以带参数，创建对象时利用传参进行属性的初始化。 初始化：过滤，为属性赋值等。#### 2. 构造器的语法- 它具有与类相同的名称（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-04T17:05:18.000Z"}],["meta",{"property":"article:author","content":"Victor Da V"}],["meta",{"property":"article:published_time","content":"2023-06-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-04T17:05:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2-4. 构造器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-04T17:05:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Victor Da V\\",\\"url\\":\\"https://aicell.cc/about\\"}]}"]]},"headers":[],"git":{"createdTime":1685898318000,"updatedTime":1685898318000,"contributors":[{"name":"Aaron Jinno","email":"aaronjinno@gmail.com","commits":1}]},"readingTime":{"minutes":2.21,"words":663},"filePathRelative":"java/javase/2.OOP/2-4.构造器.md","localizedDate":"2023年6月3日","excerpt":"","autoDesc":true}');export{t as data};
