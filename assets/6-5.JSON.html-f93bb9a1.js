import{_ as e,r as t,o,c,a,b as n,d as p,e as i}from"./app-a9ffbbba.js";const l="/java-doc/img/java/javaweb/6-5-1.jpg",d={},r=a("h2",{id:"i-json语法",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#i-json语法","aria-hidden":"true"},"#"),n(" Ⅰ. JSON语法")],-1),u={href:"https://aaronjinno.github.io/front-doc/basic/js/8.%E5%85%B6%E4%BB%96/8-3.json.html",target:"_blank",rel:"noopener noreferrer"},k=i('<h2 id="ii-json转换" tabindex="-1"><a class="header-anchor" href="#ii-json转换" aria-hidden="true">#</a> Ⅱ. JSON转换</h2><h4 id="_1-json与java对象" tabindex="-1"><a class="header-anchor" href="#_1-json与java对象" aria-hidden="true">#</a> 1. JSON与Java对象</h4><figure><img src="'+l+`" alt="6-5-1" tabindex="0" loading="lazy"><figcaption>6-5-1</figcaption></figure><ul><li>请求数据：JSON字符串转为Java对象</li><li>响应数据：Java对象转为JSON字符串</li></ul><h4 id="_2-fastjson-json与java对象的转换" tabindex="-1"><a class="header-anchor" href="#_2-fastjson-json与java对象的转换" aria-hidden="true">#</a> 2. Fastjson：JSON与Java对象的转换</h4><p>Fastjson 是阿里巴巴提供的一个Java语言编写的高性能功能完善的 JSON 库，是目前Java语言中最快的 JSON 库，可以实现 Java 对象和 JSON 字符串的相互转换。</p><h5 id="导入坐标" tabindex="-1"><a class="header-anchor" href="#导入坐标" aria-hidden="true">#</a> 导入坐标</h5><p>Maven导入Fastjson包</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.62<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-java对象转json" tabindex="-1"><a class="header-anchor" href="#_3-java对象转json" aria-hidden="true">#</a> 3. Java对象转JSON</h4><p>使用 <code>Fastjson</code> 提供的 <code>JSON</code> 类中的 <code>toJSONString()</code> 静态方法即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> jsonStr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-json转java对象" tabindex="-1"><a class="header-anchor" href="#_4-json转java对象" aria-hidden="true">#</a> 4. JSON转Java对象</h4><p>使用 <code>Fastjson</code> 提供的 <code>JSON</code> 类中的 <code>parseObject()</code> 静态方法即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15);function v(h,g){const s=t("ExternalLinkIcon");return o(),c("div",null,[r,a("p",null,[n("详见：前端>基础>JS>8.其他>"),a("a",u,[n("json"),p(s)])]),k])}const m=e(d,[["render",v],["__file","6-5.JSON.html.vue"]]);export{m as default};
