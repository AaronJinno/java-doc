const t=JSON.parse('{"key":"v-7762f3d8","path":"/java/javase/2.OOP/2-7.%E5%A4%9A%E6%80%81.html","title":"2-7. 多态","lang":"zh-CN","frontmatter":{"title":"2-7. 多态","date":"2023-06-03T00:00:00.000Z","description":"Ⅰ. 多态 1. 对象的多态性 父类的引用指向子类的对象（或子类的对象赋给父类的引用）Java引用变量有两个类型： 编译时类型和运行时类型。编译时类型由声明该变量时使用的类型决定，运行时类型由实际赋给该变量的对象决定。 简称：编译看左边；运行看右边。 看左边：看的是父类的引用（父类中不具备子类特有的方法）; 看右边 ： 看的是子类的对象（实际运行的是子...","head":[["meta",{"property":"og:url","content":"https://aicell.cc/java-doc/java/javase/2.OOP/2-7.%E5%A4%9A%E6%80%81.html"}],["meta",{"property":"og:site_name","content":"Java全栈"}],["meta",{"property":"og:title","content":"2-7. 多态"}],["meta",{"property":"og:description","content":"Ⅰ. 多态 1. 对象的多态性 父类的引用指向子类的对象（或子类的对象赋给父类的引用）Java引用变量有两个类型： 编译时类型和运行时类型。编译时类型由声明该变量时使用的类型决定，运行时类型由实际赋给该变量的对象决定。 简称：编译看左边；运行看右边。 看左边：看的是父类的引用（父类中不具备子类特有的方法）; 看右边 ： 看的是子类的对象（实际运行的是子..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T18:33:04.000Z"}],["meta",{"property":"article:author","content":"Victor Da V"}],["meta",{"property":"article:published_time","content":"2023-06-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-07T18:33:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2-7. 多态\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-07T18:33:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Victor Da V\\",\\"url\\":\\"https://aicell.cc/about\\"}]}"]]},"headers":[{"level":2,"title":"Ⅰ. 多态","slug":"i-多态","link":"#i-多态","children":[]},{"level":2,"title":"Ⅱ. 转型","slug":"ii-转型","link":"#ii-转型","children":[]}],"git":{"createdTime":1685898318000,"updatedTime":1686162784000,"contributors":[{"name":"Aaron Jinno","email":"aaronjinno@gmail.com","commits":2}]},"readingTime":{"minutes":7.46,"words":2239},"filePathRelative":"java/javase/2.OOP/2-7.多态.md","localizedDate":"2023年6月3日","excerpt":"","autoDesc":true}');export{t as data};
