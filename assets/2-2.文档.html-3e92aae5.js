import{_ as n,a as s}from"./2-2-4-af1fa04e.js";import{_ as a,o as p,c as t,e}from"./app-ab36e818.js";const o="/java-doc/img/sql/es/2-2-1.jpg",i="/java-doc/img/sql/es/2-2-2.jpg",c="/java-doc/img/sql/es/2-2-5.jpg",l="/java-doc/img/sql/es/2-2-6.jpg",r="/java-doc/img/sql/es/2-2-7.jpg",u="/java-doc/img/sql/es/2-2-8.jpg",d={},k=e('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>ES中没有表的概念，文档相当于关系型数据库中的一行数据。</p></div><h2 id="创建文档" tabindex="-1"><a class="header-anchor" href="#创建文档" aria-hidden="true">#</a> 创建文档</h2><p>创建好索引后，就可以向索引（库）中创建文档并添加数据了。</p><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. 语法</h4><ul><li>请求方式：POST</li><li>请求地址：<code>http://ES数据库地址/索引名/_doc</code></li><li>请求体：JSON格式</li></ul><p>添加数据，必须有数据才行（没有会报错），数据通过JSON格式的请求体发送。</p><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h4><p>在 Postman 中，向 ES 服务器发 POST 请求 ：<code>http://127.0.0.1:9200/shopping/_doc</code></p><figure><img src="'+o+`" alt="2-2-1" tabindex="0" loading="lazy"><figcaption>2-2-1</figcaption></figure><h4 id="_3-响应结果分析" tabindex="-1"><a class="header-anchor" href="#_3-响应结果分析" aria-hidden="true">#</a> 3. 响应结果分析</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span> <span class="token comment">//索引</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;o7K19YgBBr3LfT2KiQat&quot;</span><span class="token punctuation">,</span> <span class="token comment">//唯一标识</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//版本</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span> <span class="token comment">//结果，created表示创建成功</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//分片</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//分片总数</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//分片是否成功，1表示成功</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//分片是否失败，0表示为未失败</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-自定义-id" tabindex="-1"><a class="header-anchor" href="#_4-自定义-id" aria-hidden="true">#</a> 4. 自定义 _id</h4><div class="hint-container tip"><p class="hint-container-title">提示</p><p>_id是唯一标识，默认情况下，ES 服务器会随机生成一个。每次POST请求，都会随机生成一个，即使请求的内容完全相同。</p></div><p>默认生成的_id是不容易记得，可以在添加数据时，手动指定一个id，此时的请求链接为：<code>http://ES数据库地址/索引名/_doc/_id</code>，如下：</p><figure><img src="`+i+'" alt="2-2-2" tabindex="0" loading="lazy"><figcaption>2-2-2</figcaption></figure><p>如上，返回的id已经是自定义的id了，此时重复发送请求，返回的结果是一样的（因为ES不会再返回一个随机的_id）。</p><h4 id="_5-post与put" tabindex="-1"><a class="header-anchor" href="#_5-post与put" aria-hidden="true">#</a> 5. POST与PUT</h4><p>PUT是幂等性的，POST不是。</p><p>当没有手动指定_id时，相同请求的每次返回的结果是不同的（_id不同），此时只能使用POST请求，因为PUT是幂等性的。</p><p>当手动自定了_id时，相同请求的每次返回的结果是相同的（_id是固定的），此时既可以使用POST请求，也可以使用PUT请求。</p><h2 id="查看文档" tabindex="-1"><a class="header-anchor" href="#查看文档" aria-hidden="true">#</a> 查看文档</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了方便查看文档增删改的结果，先了解两个简单查看文档的方法。</p><p>详细的文档查询详见下章：文档查询</p></div><p>查看文档就是查看数据，通过文档的唯一标识<code>_id</code>进行查看，也可以查看所有的文档。</p><p>类似于 MySQL 中数据的主键查询</p><h4 id="_1-语法-1" tabindex="-1"><a class="header-anchor" href="#_1-语法-1" aria-hidden="true">#</a> 1. 语法</h4><ul><li>请求方式：GET</li><li>请求地址：<code>http://ES数据库地址/索引名/_doc/要查看的文档_id</code></li></ul><h4 id="_2-示例-1" tabindex="-1"><a class="header-anchor" href="#_2-示例-1" aria-hidden="true">#</a> 2. 示例</h4><p>在 Postman 中，向 ES 服务器发 GET 请求 ：<code>http://127.0.0.1:9200/shopping/_doc/1000</code></p><figure><img src="'+n+`" alt="2-2-3" tabindex="0" loading="lazy"><figcaption>2-2-3</figcaption></figure><h4 id="_3-响应结果分析-1" tabindex="-1"><a class="header-anchor" href="#_3-响应结果分析-1" aria-hidden="true">#</a> 3. 响应结果分析</h4><p>正常查询到结果的响应信息如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 索引</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;found&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 查询结果： true 表示查找到，false 表示未查找到</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 文档原信息</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">3999.00</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果查询不到结果，相应信息如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10000&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;found&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-查看索引下的全部文档" tabindex="-1"><a class="header-anchor" href="#_4-查看索引下的全部文档" aria-hidden="true">#</a> 4. 查看索引下的全部文档</h4><ul><li>请求方式：GET</li><li>请求地址：<code>http://ES数据库地址/索引名/_search</code></li></ul><figure><img src="`+s+`" alt="2-2-4" tabindex="0" loading="lazy"><figcaption>2-2-4</figcaption></figure><p>查询结果如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token comment">//耗时，单位ms</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//是否超时</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//查询命中</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//统计信息</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//结果条数</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;o7K19YgBBr3LfT2KiQat&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">3999.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">3999.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之前创建文档时，对相同的请求体和请求链接发送了两次请求，一次返回系统自定义的_id，一次手动指定的_id，因此查询到了两条数据（仅_id不同）。</p><h2 id="修改文档" tabindex="-1"><a class="header-anchor" href="#修改文档" aria-hidden="true">#</a> 修改文档</h2><p>分为两种修改方式：</p><ul><li>完全覆盖：整个文档的数据全部替换（_还是原来的文档，就是数据全变了）</li><li>局部修改：仅修改文档中的某条数据，其他的数据不变</li></ul><p>修改文档指的是修改文档的数据（请求体），而不是其他内容（如_id）。</p><h4 id="_1-完全覆盖" tabindex="-1"><a class="header-anchor" href="#_1-完全覆盖" aria-hidden="true">#</a> 1. 完全覆盖</h4><p>和新增文档一样，输入相同的 URL 地址请求，如果请求体变化，会将原有的数据内容覆盖</p><ul><li>请求方式：POST</li><li>请求地址：<code>http://ES数据库地址/索引名/_doc/待修改的文档_id</code></li></ul><figure><img src="`+c+`" alt="2-2-5" tabindex="0" loading="lazy"><figcaption>2-2-5</figcaption></figure><p>响应结果里的<code>result:&quot;updated&quot;</code>表示更新成功。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 版本：修改一次版本就会+1</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;updated&quot;</span><span class="token punctuation">,</span> <span class="token comment">// updated 表示数据被更新</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-局部数据修改" tabindex="-1"><a class="header-anchor" href="#_2-局部数据修改" aria-hidden="true">#</a> 2. 局部数据修改</h4><p>修改数据时，也可以只修改某一给条数据的局部信息</p><ul><li>请求方式：POST</li><li>请求地址：<code>http://ES数据库地址/索引名/_update/待修改的文档_id</code></li></ul><p>此时请求体的格式是固定的：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;doc&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;待修改的字段&quot;</span><span class="token operator">:</span> 新的值，
        ...
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-1-示例" tabindex="-1"><a class="header-anchor" href="#_2-1-示例" aria-hidden="true">#</a> 2.1 示例</h5><p>修改了文档数据中的title和price</p><figure><img src="`+l+'" alt="2-2-6" tabindex="0" loading="lazy"><figcaption>2-2-6</figcaption></figure><p>响应结果和完全覆盖一样，<code>result:&quot;updated&quot;</code>表示更新成功。</p><h2 id="删除文档" tabindex="-1"><a class="header-anchor" href="#删除文档" aria-hidden="true">#</a> 删除文档</h2><p>删除文档，底层是逻辑删除（而非从磁盘上删除）。</p><p>删除文档是根据文档的_id进行删除的。</p><ul><li>请求方式：DELETE</li><li>请求地址：<code>http://ES数据库地址/索引名/_doc/待删除的文档_id</code></li></ul><h4 id="_1-删除示例" tabindex="-1"><a class="header-anchor" href="#_1-删除示例" aria-hidden="true">#</a> 1. 删除示例</h4><p>在 Postman 中，向 ES 服务器发 DELETE 请求 ：<code>http://127.0.0.1:9200/shopping/_doc/1000</code></p><figure><img src="'+r+`" alt="2-2-7" tabindex="0" loading="lazy"><figcaption>2-2-7</figcaption></figure><h5 id="_1-1-响应结果分析" tabindex="-1"><a class="header-anchor" href="#_1-1-响应结果分析" aria-hidden="true">#</a> 1.1 响应结果分析</h5><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token comment">//版本：对数据的操作，都会更新版本</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;deleted&quot;</span><span class="token punctuation">,</span> <span class="token comment">//结果： deleted 表示数据被标记为删除</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-查询已删除的文档" tabindex="-1"><a class="header-anchor" href="#_1-2-查询已删除的文档" aria-hidden="true">#</a> 1.2 查询已删除的文档</h5><p>响应结果如下：<code>found:false</code>表示文档数据已被删除</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;found&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-删除不存在的文档" tabindex="-1"><a class="header-anchor" href="#_1-3-删除不存在的文档" aria-hidden="true">#</a> 1.3 删除不存在的文档</h5><p>响应的结果中有<code>result:&quot;not_found&quot;</code>，表示待删除的文档未找到。</p><h4 id="_2-条件删除" tabindex="-1"><a class="header-anchor" href="#_2-条件删除" aria-hidden="true">#</a> 2. 条件删除</h4><p>一般删除数据都是根据文档的唯一性标识进行删除，实际操作时，也可以根据条件对多条数<br> 据进行删除（所有满足条件的文档都会被删除）。</p><ul><li>请求方式：POST <mark>一定要注意是POST请求，不是DELETE请求</mark></li><li>请求地址：<code>http://ES数据库地址/索引名/_delete_by_query</code></li></ul><p>在请求体中，输入查询语句（详见：高级查询）</p><h5 id="_2-1-示例-1" tabindex="-1"><a class="header-anchor" href="#_2-1-示例-1" aria-hidden="true">#</a> 2.1 示例</h5><p>查询删除price值为5000的文档。</p><p>请求体内容为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">5000</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在postman中向ES服务器发POST请求: <code>http://localhost:9200/shopping/_delete_by_query</code></p><figure><img src="`+u+`" alt="2-2-8" tabindex="0" loading="lazy"><figcaption>2-2-8</figcaption></figure><h5 id="_2-2-响应结果分析" tabindex="-1"><a class="header-anchor" href="#_2-2-响应结果分析" aria-hidden="true">#</a> 2.2 响应结果分析</h5><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">985</span><span class="token punctuation">,</span> <span class="token comment">// 耗时ms</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//命中的文档总数</span>
    <span class="token property">&quot;deleted&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//删除数量</span>
    <span class="token property">&quot;batches&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version_conflicts&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;noops&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;retries&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;bulk&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;search&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;throttled_millis&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;requests_per_second&quot;</span><span class="token operator">:</span> <span class="token number">-1.0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;throttled_until_millis&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;failures&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,85),v=[k];function m(q,b){return p(),t("div",null,v)}const g=a(d,[["render",m],["__file","2-2.文档.html.vue"]]);export{g as default};
