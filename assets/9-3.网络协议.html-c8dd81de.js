import{_ as a,o as i,c as e,e as r}from"./app-385ffbff.js";const l="/java-doc/img/java/javase/9-3-1.jpg",t="/java-doc/img/java/javase/9-3-2.jpg",d={},h=r('<h2 id="i-网络通信协议" tabindex="-1"><a class="header-anchor" href="#i-网络通信协议" aria-hidden="true">#</a> Ⅰ. 网络通信协议</h2><h4 id="_1-网络通信协议" tabindex="-1"><a class="header-anchor" href="#_1-网络通信协议" aria-hidden="true">#</a> 1. 网络通信协议</h4><p>计算机网络中实现通信必须有一些约定，即通信协议.</p><p>对速率、传输代码、代码结构、传输控制步骤、出错控制等制定标准。</p><h4 id="_2-通信协议的分层" tabindex="-1"><a class="header-anchor" href="#_2-通信协议的分层" aria-hidden="true">#</a> 2. 通信协议的分层</h4><p>计算机网络通信涉及内容很多，比如指定源地址和目标地址，加密解密，压缩解压缩，差错控制，流量控制，路由控制，如何实现如此复杂的网络协议呢？</p><p>在制定协议时，把复杂成份分解成一些简单的成份，再将它们复合起来。</p><p>最常用的复合方式是层次方式，即同层间可以通信、上一层可以调用下一层，而与再下一层不发生关系。各层互不影响，利于系统的开发和扩展。</p><h2 id="ii-tcp与udp" tabindex="-1"><a class="header-anchor" href="#ii-tcp与udp" aria-hidden="true">#</a> Ⅱ. TCP与UDP</h2><h4 id="_1-传输层协议" tabindex="-1"><a class="header-anchor" href="#_1-传输层协议" aria-hidden="true">#</a> 1. 传输层协议</h4><p>传输层协议中有两个非常重要的协议：</p><ul><li>传输控制协议TCP(Transmission Control Protocol)</li><li>用户数据报协议UDP(User Datagram Protocol)。</li></ul><h4 id="_2-tcp-ip-协议簇" tabindex="-1"><a class="header-anchor" href="#_2-tcp-ip-协议簇" aria-hidden="true">#</a> 2. TCP/IP 协议簇</h4><p>TCP/IP 以其两个主要协议：传输控制协议(TCP) 和网络互联协议(IP)而得名，实际上是一组协议，包括多个具有不同功能且互为关联的协议。</p><p>TCP/IP协议模型从更实用的角度出发，形成了高效的四层体系结构，即物理链路层、IP层、传输层和应用层。</p><p>IP协议：IP(Internet Protocol)协议是网络层的主要协议，支持网间互连的数据通信。</p><h4 id="_3-tcp协议" tabindex="-1"><a class="header-anchor" href="#_3-tcp协议" aria-hidden="true">#</a> 3. TCP协议</h4><ul><li>使用TCP协议前，须先建立TCP连接，形成传输数据通道</li><li>传输前，采用“ 三次握手”方式，点对点通信，是可靠的</li><li>TCP协议进行通信的两个应用进程：客户端、服务端。</li><li>在连接中可进行大数据量的传输</li><li>传输完毕，需释放已建立的连接，效率低</li></ul><h4 id="_4-udp协议" tabindex="-1"><a class="header-anchor" href="#_4-udp协议" aria-hidden="true">#</a> 4. UDP协议</h4><p>常用于：视频播放。</p><ul><li>将数据、源、目的封装成数据包，不需要建立连接</li><li>每个数据报的大小限制在64K内</li><li>发送不管对方是否准备好，接收方收到也不确认，故是不可靠的</li><li>可以广播发送</li><li>发送数据结束时无需释放资源，开销小，速度快</li></ul><h4 id="_5-tcp的三次握手" tabindex="-1"><a class="header-anchor" href="#_5-tcp的三次握手" aria-hidden="true">#</a> 5. TCP的三次握手</h4><p>形象类比：A（客户端）与B（服务端）进行对话</p><ul><li>A：B，你好，我是A；</li><li>B：A，你好，我是B，我知道你是A</li><li>A：B，OK，我现在知道你知道我是A了。<br> 结论：至此，三次对话，双方都知道对方是谁了，也知道对方知道自己是谁了。</li></ul><figure><img src="'+l+'" alt="9-3-1" tabindex="0" loading="lazy"><figcaption>9-3-1</figcaption></figure><h4 id="_6-tcp的四次挥手" tabindex="-1"><a class="header-anchor" href="#_6-tcp的四次挥手" aria-hidden="true">#</a> 6. TCP的四次挥手</h4><ul><li>客户端：我要断开连接了-&gt;服务端</li><li>服务端：我知道了-&gt;客户端</li><li>服务端：连接断开-&gt;客户端</li><li>客户端：测试是否断开-&gt;服务端</li></ul><figure><img src="'+t+'" alt="9-3-2" tabindex="0" loading="lazy"><figcaption>9-3-2</figcaption></figure>',28),c=[h];function n(o,p){return i(),e("div",null,c)}const _=a(d,[["render",n],["__file","9-3.网络协议.html.vue"]]);export{_ as default};
