import{_ as a,o as n,c as s,e as t}from"./app-5ca20126.js";const p="/java-doc/img/frame/springboot/1-6-1.jpg",e="/java-doc/img/frame/springboot/1-6-2.jpg",i={},o=t('<h2 id="运行机制" tabindex="-1"><a class="header-anchor" href="#运行机制" aria-hidden="true">#</a> 运行机制</h2><h4 id="_1-配置生效" tabindex="-1"><a class="header-anchor" href="#_1-配置生效" aria-hidden="true">#</a> 1. 配置生效</h4><p>SpringBoot将大部分配置都整合到了application.yml文件中。在写代码时，并没有主动引用application.yml中的配置，这些配置是如何生效的？</p><p>application.yml中的配置默认是不生效的，比如设置了链接MongoDB的配置，在写代码时，即使引入了MongoDB依赖，也无法创建相关的类（因为配置未生效，MongoDB服务器未连接）。</p><p>只有启动SpringBoot服务（内置Tomcat），才能将配置文件加载到内存总读取，此时配置才能生效，因此开发时，SpringBoot都处于启动状态。</p><h2 id="多模块项目" tabindex="-1"><a class="header-anchor" href="#多模块项目" aria-hidden="true">#</a> 多模块项目</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>本质是依靠maven相互之间的依赖，把多个模块融合进一个项目中。</p></div><p>之前提到的创建项目，指的是单模块项目，其实SpringBoot项目内是可以创建多个模块的，对于复杂的项目可以使用多模块进行开发。</p><h4 id="_1-创建父工程" tabindex="-1"><a class="header-anchor" href="#_1-创建父工程" aria-hidden="true">#</a> 1. 创建父工程</h4><p>和之前创建项目的过程一样，都是新建一个Spring Initializr项目。</p><p>项目创建完后要把父工程内目录删除，除了<code>pom.xml</code>文件外全部删掉(<code>.idea</code>、<code>.mvn</code>设置隐藏，不要误删)。</p><p>代码是在模块中写的，父工程只负责管理依赖。</p><h4 id="_2-创建子模块" tabindex="-1"><a class="header-anchor" href="#_2-创建子模块" aria-hidden="true">#</a> 2. 创建子模块</h4><p>根据需求创建子模块。</p><p>父工程上右键-&gt;new：Module，创建模块，创建方式要选择Maven而不是Spring Initializr</p><ul><li>Spring Initializr：使用该方式创建的子模块，是一个完全独立的Spring项目，他和父工程之间的没有建立父子关系，需要手动创建，很麻烦。</li><li>Maven：使用Maven方式可以比较放标创建模块，建立完善的父子关系。</li></ul><figure><img src="'+p+'" alt="1-6-1" tabindex="0" loading="lazy"><figcaption>1-6-1</figcaption></figure><p>如下图是通过Spring Initializr方式创建的子模块，他只是在目录结构上属于父工程的子目录，但他是独立的(root)项目。</p><figure><img src="'+e+`" alt="1-6-2" tabindex="0" loading="lazy"><figcaption>1-6-2</figcaption></figure><h4 id="_3-web支持" tabindex="-1"><a class="header-anchor" href="#_3-web支持" aria-hidden="true">#</a> 3. web支持</h4><div class="hint-container tip"><p class="hint-container-title">提示</p><p>web模块就是提供web服务的模块，web模块同时引入 spring-boot-starter-web ，这样才能开启SprigMVC，从而启动Tomcat，让程序成为<em>web程序</em>，从而能持续运行。</p><p>普通模块就算有启动类，也只能运行一次就暂停，不能持续运行。</p><p>只要是提供web服务的模块，都要设计成web模块。</p></div><p>使用Maven方式创建的项目，是没有启动类和配置文件的，需要自己手动创建。</p><p>注意：不要盲目创建，如果该模块不需要启动，只是作为其他模块的依赖，就不需要补齐启动类和配置文件，例如：common模块。</p><h5 id="_3-1-启动类" tabindex="-1"><a class="header-anchor" href="#_3-1-启动类" aria-hidden="true">#</a> 3.1 启动类</h5><p>补齐启动类后，该模块就可以作为独立的SpringBoot启动了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AifaceApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">AifaceApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-配置文件" aria-hidden="true">#</a> 3.2 配置文件</h5><p>在resources目录下创建application.yml配置文件，运行启动类时，配置文件会被加载。</p><h4 id="_4-引入第三方模块" tabindex="-1"><a class="header-anchor" href="#_4-引入第三方模块" aria-hidden="true">#</a> 4. 引入第三方模块</h4><ul><li>如果子模块是直接从外部复制进去的，一定要维护好父子pom的。确保模块名字没有和路径名字是一样的，如果出现了，右键模块rename修改即可。</li><li>复制过来的模块代码源路径常常后面存在resource root的字样，这种情况选择<code>File --&gt; Project Structure --&gt;Modules</code> ，随后找到模块的source，右侧会有灰色的内容，删除掉即可。</li></ul><h4 id="_5-依赖管理" tabindex="-1"><a class="header-anchor" href="#_5-依赖管理" aria-hidden="true">#</a> 5. 依赖管理</h4><p>这是Maven部分的内容，和普通的Maven创建的项目一样，父工程可以管理子模块的依赖。</p><h4 id="_6-打包" tabindex="-1"><a class="header-anchor" href="#_6-打包" aria-hidden="true">#</a> 6. 打包</h4><p>直接进行打包会出现很多问题，需要进行以下多个设置：</p><h5 id="_6-1-父工程" tabindex="-1"><a class="header-anchor" href="#_6-1-父工程" aria-hidden="true">#</a> 6.1 父工程</h5><p>父工程的设置编译插件 <code>spring-boot-maven-plugin</code></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 可能会有bug，需要添加版本，版本与SpringBoot版本一致 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-2-子模块-web模块" tabindex="-1"><a class="header-anchor" href="#_6-2-子模块-web模块" aria-hidden="true">#</a> 6.2 子模块：Web模块</h5><p>带启动类的模块，需要手动指定启动类，以防报bug</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>com.sgugo.web.BootWebApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-3-子模块-普通模块" tabindex="-1"><a class="header-anchor" href="#_6-3-子模块-普通模块" aria-hidden="true">#</a> 6.3 子模块：普通模块</h5><p>没有启动类的模块，设置不让springboot-maven编译插件将当前模块作为启动模块编译</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-4-打包方式" tabindex="-1"><a class="header-anchor" href="#_6-4-打包方式" aria-hidden="true">#</a> 6.4 打包方式</h5><p>确保所有的子模块pom文件声明了jar打包方式。</p><p>如果你不申明很可能会报<code>&#39;packaging&#39; with value &#39;jar&#39; is invalid. Aggregator projects require &#39;pom&#39; as packaging.</code>的错误</p><p>父工程的打包方式应该是pom</p><h2 id="开发与测试" tabindex="-1"><a class="header-anchor" href="#开发与测试" aria-hidden="true">#</a> 开发与测试</h2><h4 id="_1-web模块的开发" tabindex="-1"><a class="header-anchor" href="#_1-web模块的开发" aria-hidden="true">#</a> 1. web模块的开发</h4><p>对于web模块，开发时是需要启动SpringBoot的。</p><p>而一旦启动了模块，就不能在通过<code>@Test</code>标签运行方法。因为运行方法的时候会让Tomcat暂停，Tomcat暂停就读不到很多配置，影响测试结果。</p><h4 id="_2-web模块的访问" tabindex="-1"><a class="header-anchor" href="#_2-web模块的访问" aria-hidden="true">#</a> 2. web模块的访问</h4><p>web模块只能通过http协议进行访问，也就是通过Controller上定义的路由进行访问。</p><p>一般是浏览器或postman输入url查看访问结果，也可以携带一些测试代码，查看测试结果。</p><h4 id="_3-web模块的测试" tabindex="-1"><a class="header-anchor" href="#_3-web模块的测试" aria-hidden="true">#</a> 3. web模块的测试</h4><p>web模块不能直接使用@Test标签，不能直接运行mian方法，但取而代之是可以采用<code>spring-boot-starter-test</code>进行测试。</p><p>详见：实用功能&gt;代码测试</p>`,57),c=[o];function l(r,u){return n(),s("div",null,c)}const g=a(i,[["render",l],["__file","1-6.项目开发.html.vue"]]);export{g as default};
