import{_ as a,o as e,c as i,e as r}from"./app-b355f476.js";const h={},d=r('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>JDK11的内容指的是JDK9~JDK11</p><p>暂略</p></div><h2 id="i-modularity" tabindex="-1"><a class="header-anchor" href="#i-modularity" aria-hidden="true">#</a> Ⅰ. Modularity</h2><h2 id="ii-repl工具" tabindex="-1"><a class="header-anchor" href="#ii-repl工具" aria-hidden="true">#</a> Ⅱ. REPL工具</h2><h2 id="iii-try语句" tabindex="-1"><a class="header-anchor" href="#iii-try语句" aria-hidden="true">#</a> Ⅲ. try语句</h2><h2 id="iv-底层改变" tabindex="-1"><a class="header-anchor" href="#iv-底层改变" aria-hidden="true">#</a> Ⅳ. 底层改变</h2><h2 id="v-变量类型推断" tabindex="-1"><a class="header-anchor" href="#v-变量类型推断" aria-hidden="true">#</a> Ⅴ. 变量类型推断</h2><h2 id="vi-string新增方法" tabindex="-1"><a class="header-anchor" href="#vi-string新增方法" aria-hidden="true">#</a> Ⅵ. String新增方法</h2><h2 id="vii-其他" tabindex="-1"><a class="header-anchor" href="#vii-其他" aria-hidden="true">#</a> Ⅶ. 其他</h2><h4 id="_1-copyof" tabindex="-1"><a class="header-anchor" href="#_1-copyof" aria-hidden="true">#</a> 1. copyOf()</h4><h4 id="_2-optional加强" tabindex="-1"><a class="header-anchor" href="#_2-optional加强" aria-hidden="true">#</a> 2. Optional加强</h4><h4 id="_3-局部类型推断升级" tabindex="-1"><a class="header-anchor" href="#_3-局部类型推断升级" aria-hidden="true">#</a> 3. 局部类型推断升级</h4><h4 id="_4-httpclient" tabindex="-1"><a class="header-anchor" href="#_4-httpclient" aria-hidden="true">#</a> 4. HttpClient</h4><h4 id="_5-更简化的编译运行" tabindex="-1"><a class="header-anchor" href="#_5-更简化的编译运行" aria-hidden="true">#</a> 5. 更简化的编译运行</h4><h4 id="_6-接口中声明私有方法" tabindex="-1"><a class="header-anchor" href="#_6-接口中声明私有方法" aria-hidden="true">#</a> 6. 接口中声明私有方法</h4><h4 id="_7-钻石操作符-的增强" tabindex="-1"><a class="header-anchor" href="#_7-钻石操作符-的增强" aria-hidden="true">#</a> 7. 钻石操作符&lt;&gt;的增强</h4>',15),t=[d];function n(c,s){return e(),i("div",null,t)}const l=a(h,[["render",n],["__file","b-7.toJDK11.html.vue"]]);export{l as default};
