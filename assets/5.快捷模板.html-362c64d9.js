import{_ as a,o as e,c as i,e as n}from"./app-77176646.js";const t="/java-doc/img/java/idea/5-1.jpg",s="/java-doc/img/java/idea/5-2.jpg",d="/java-doc/img/java/idea/5-3.jpg",o={},r=n('<h2 id="代码简写" tabindex="-1"><a class="header-anchor" href="#代码简写" aria-hidden="true">#</a> 代码简写</h2><p>下方的模板指的是templates：代码简写</p><h4 id="_1-查看系统自定义模板" tabindex="-1"><a class="header-anchor" href="#_1-查看系统自定义模板" aria-hidden="true">#</a> 1. 查看系统自定义模板</h4><p>Postfix Completion【不能修改添加】：可以查看很多代码的简写，可以让我们写代码更快。<br> 位置：<code>Setting-&gt;Editor-&gt;General：Postfix Completion</code></p><p>Live Templates盘【可以修改添加】<br> 位置：<code>Setting-&gt;Editor-&gt;Live templates：Java</code></p><h4 id="_2-增改模板" tabindex="-1"><a class="header-anchor" href="#_2-增改模板" aria-hidden="true">#</a> 2. 增改模板</h4><p>Live Templates设置中可以增改模板。<br> 选中简写，进行修改，或者点击右边的加号（增加）、减号（删除）。</p><ul><li>Abbreviation：简写</li><li>Description：简写的说明</li><li>Template text：具体的被简写的代码。</li></ul><h4 id="_3-系统常用模板" tabindex="-1"><a class="header-anchor" href="#_3-系统常用模板" aria-hidden="true">#</a> 3. 系统常用模板</h4><ul><li>main：public void main (String[] args){}</li><li>sout = System.out.println();</li><li>soutm = System.out.println(&quot;当前类名.当前方法&quot;);</li><li>soutp = System.out.println(&quot;&quot;);</li><li>soutv = System.out.println(&quot;变量名 = &quot; + 变量);</li></ul><h2 id="自动生成注释" tabindex="-1"><a class="header-anchor" href="#自动生成注释" aria-hidden="true">#</a> 自动生成注释</h2><h4 id="类注释" tabindex="-1"><a class="header-anchor" href="#类注释" aria-hidden="true">#</a> 类注释</h4><p>进入设置：<code>File-&gt;Setting-&gt;Editor-&gt;File and Code Templates</code>-&gt;右边选择<code>Files</code>：选择<code>Class</code></p><figure><img src="'+t+`" alt="5-1" tabindex="0" loading="lazy"><figcaption>5-1</figcaption></figure><h5 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h5><p>复制以下代码进行设置，注意是粘贴在<code>public class \${NAME}</code>上方</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @ProjectName:    $<span class="token punctuation">{</span>PROJECT_NAME<span class="token punctuation">}</span>  
 * @Package:        $<span class="token punctuation">{</span>PACKAGE_NAME<span class="token punctuation">}</span>
 * @ClassName:      $<span class="token punctuation">{</span>NAME<span class="token punctuation">}</span>
 * @Author:     Aaron Jinno
 * @Description:  TODO  
 * @Date:    $<span class="token punctuation">{</span>DATE<span class="token punctuation">}</span> $<span class="token punctuation">{</span>TIME<span class="token punctuation">}</span>
 * @Since     1.0
 * @Version:    1.0
 */</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="勾选复选框" tabindex="-1"><a class="header-anchor" href="#勾选复选框" aria-hidden="true">#</a> 勾选复选框</h5><p>将下方两个复选框勾上，点击Apply和OK关掉即成功了</p><figure><img src="`+s+'" alt="5-2" tabindex="0" loading="lazy"><figcaption>5-2</figcaption></figure><h4 id="_2-方法注释" tabindex="-1"><a class="header-anchor" href="#_2-方法注释" aria-hidden="true">#</a> 2. 方法注释</h4><p>比较不友好，建议直接 /**回车，自动生成。</p><h4 id="_3-、debug" tabindex="-1"><a class="header-anchor" href="#_3-、debug" aria-hidden="true">#</a> 3. 、debug</h4><p>设置自动生成注解后，可能会产生<code>Wrong tag &#39;Author</code>:&#39; 错误的 Author 标签等的黄色警告问题。</p><figure><img src="'+d+'" alt="5-3" tabindex="0" loading="lazy"><figcaption>5-3</figcaption></figure><p>解决方法：取消勾选Javadoc的错误检测问题（这是最简单的解决方法），也可以定制Javadoc里运行的tag（这种设置比较复杂）</p><h2 id="文件代码模板" tabindex="-1"><a class="header-anchor" href="#文件代码模板" aria-hidden="true">#</a> 文件代码模板</h2><p>File and Code Templates：本意是文件代码模板，除了为某类文件添加注释外，还可以为我们创建某类文件时，自动添加代码。</p><p>比如：创建Class文件时会自动创建类。</p>',29),c=[r];function l(p,u){return e(),i("div",null,c)}const m=a(o,[["render",l],["__file","5.快捷模板.html.vue"]]);export{m as default};
