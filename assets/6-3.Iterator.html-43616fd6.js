import{_ as o,r as n,o as c,c as i,a as l,b as a,d as s,w as u,e as t}from"./app-cd3300e3.js";const r="/java-doc/img/java/javase/6-3-1.jpg",k={},d=t('<h2 id="i-iterator-接口" tabindex="-1"><a class="header-anchor" href="#i-iterator-接口" aria-hidden="true">#</a> Ⅰ. Iterator 接口</h2><p>Iterator是个迭代器接口，用于集合元素的遍历。</p><h4 id="_1-迭代器" tabindex="-1"><a class="header-anchor" href="#_1-迭代器" aria-hidden="true">#</a> 1. 迭代器</h4><p>GOF给迭代器模式(设计模式的一种)的定义为：提供一种方法访问一个容器(container)对象中各个元素，而又不需暴露该对象的内部细节。 迭代器模式，就是为容器而生。</p><p>Iterator对象称为迭代器(设计模式的一种)，主要用于遍历 Collection 集合中的元素。</p><h4 id="_2-iterator方法和iterator对象" tabindex="-1"><a class="header-anchor" href="#_2-iterator方法和iterator对象" aria-hidden="true">#</a> 2. iterator方法和Iterator对象</h4><p>Collection接口继承了java.lang.Iterable接口，该接口有一个iterator()方法，那么所有实现了Collection接口的集合类都有一个iterator()方法，用以返回一个实现了Iterator接口的对象。</p><p>Iterator对象称为迭代器，主要用于遍历 Collection 集合中的元素。</p><p><mark>Map集合的元素，不使用Iterator遍历。</mark></p><h4 id="_3-iterator对象" tabindex="-1"><a class="header-anchor" href="#_3-iterator对象" aria-hidden="true">#</a> 3. iterator对象</h4><p>Iterator 仅用于遍历集合，Iterator 本身并不提供承装对象的能力。如果需要创建Iterator 对象，则必须有一个被迭代的集合</p><p>集合对象每次调用iterator()方法都得到一个全新的迭代器对象，默认游标都在集合的第一个元素之前。</p><h4 id="_4-遍历方法" tabindex="-1"><a class="header-anchor" href="#_4-遍历方法" aria-hidden="true">#</a> 4. 遍历方法</h4>',13),v=t(`<h5 id="_4-1-指针-游标" tabindex="-1"><a class="header-anchor" href="#_4-1-指针-游标" aria-hidden="true">#</a> 4.1 指针（游标）</h5><p>iterator对象有一个指针，指向集合中的某个元素。对于一个全新的迭代器，他的指针在第一个元素之前，每次执行一次next方法，指针就往后移动一次。</p><h5 id="_4-2-next" tabindex="-1"><a class="header-anchor" href="#_4-2-next" aria-hidden="true">#</a> 4.2 next()</h5><p>iterator.next()用来向后移动一次指针，并取出指针指向的集合元素，进行返回。</p><p>注意：当指针已经指向最后时，就不能再调用next方法了，会抛出异常，且取完数据后，指针就会呆在集合末尾，不会自动重置。</p><h5 id="_4-3-hashnext" tabindex="-1"><a class="header-anchor" href="#_4-3-hashnext" aria-hidden="true">#</a> 4.3 hashNext()</h5><p>用来判断指针后面还有没有集合元素。</p><h4 id="_5-进行遍历" tabindex="-1"><a class="header-anchor" href="#_5-进行遍历" aria-hidden="true">#</a> 5. 进行遍历</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//1.创建集合对象,并添加元素</span>
<span class="token class-name">Collection</span> coll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;jinno&quot;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2.创建Iterator对象,准备遍历</span>
<span class="token class-name">Iterator</span> it <span class="token operator">=</span> coll<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-1-手动遍历【不使用-仅演示】" tabindex="-1"><a class="header-anchor" href="#_5-1-手动遍历【不使用-仅演示】" aria-hidden="true">#</a> 5.1 手动遍历【不使用，仅演示】</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//123</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//aa</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//day04.Person@1b6d3586</span>

<span class="token comment">//没有数据，继续next,报异常</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-2-for循环遍历【不推荐-仅演示】" tabindex="-1"><a class="header-anchor" href="#_5-2-for循环遍历【不推荐-仅演示】" aria-hidden="true">#</a> 5.2 for循环遍历【不推荐，仅演示】</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>coll<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-while-hasnext遍历【推荐】" tabindex="-1"><a class="header-anchor" href="#_5-3-while-hasnext遍历【推荐】" aria-hidden="true">#</a> 5.3 while+hasNext遍历【推荐】</h5><p>在调用it.next()方法之前必须要调用it.hasNext()进行检测。若不调用，且下一条记录无效，直接调用it.next()会抛出NoSuchElementException异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-迭代器执行的原理" tabindex="-1"><a class="header-anchor" href="#_6-迭代器执行的原理" aria-hidden="true">#</a> 6. 迭代器执行的原理</h4><figure><img src="`+r+`" alt="6-3-1" tabindex="0" loading="lazy"><figcaption>6-3-1</figcaption></figure><h4 id="_7-遍历的注意事项" tabindex="-1"><a class="header-anchor" href="#_7-遍历的注意事项" aria-hidden="true">#</a> 7. 遍历的注意事项</h4><ul><li>每次调用iterator方法，都会返回一个全新的迭代器，指针指向第一个元素前面</li><li>取完数据后，指针不会重置，再调用next()会抛异常，想再遍历就重新获得迭代器</li></ul><h4 id="_8-remove-移除元素" tabindex="-1"><a class="header-anchor" href="#_8-remove-移除元素" aria-hidden="true">#</a> 8. remove：移除元素</h4><p>remove方法用来在遍历的时候，删除集合中的元素。此方法不同于集合直接调用remove()。</p><p>注意：如果还未调用next()或在上一次调用 next 方法之后已经调用了 remove 方法，再调用remove都会报IllegalStateException。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Object</span> obj <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-增强-for-循环" tabindex="-1"><a class="header-anchor" href="#ii-增强-for-循环" aria-hidden="true">#</a> Ⅱ. 增强 for 循环</h2><h4 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h4><p>jdk 5.0 新增了foreach循环(又称增强for循环)，用于遍历集合、数组。</p><p>遍历操作不需获取Collection或数组的长度，无需使用索引访问元素。<br> 遍历集合的底层调用Iterator完成操作。</p><h4 id="_2-示例-遍历集合" tabindex="-1"><a class="header-anchor" href="#_2-示例-遍历集合" aria-hidden="true">#</a> 2. 示例：遍历集合</h4><p>for(集合元素的类型 局部变量 : 集合对象)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Collection</span> coll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;jinno&quot;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//for(集合元素的类型 局部变量 : 集合对象)</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj <span class="token operator">:</span> coll<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-示例-遍历数组" tabindex="-1"><a class="header-anchor" href="#_3-示例-遍历数组" aria-hidden="true">#</a> 3. 示例：遍历数组</h4><p>for(数组元素的类型 局部变量 : 数组对象)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//for(数组元素的类型 局部变量 : 数组对象)</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-练习-for循环与增强for循环的对比" tabindex="-1"><a class="header-anchor" href="#_4-练习-for循环与增强for循环的对比" aria-hidden="true">#</a> 4. 练习：for循环与增强for循环的对比</h4><p>重点：增强for循环中，是把值赋给了局部变量。</p><h5 id="_4-1-普通for循环" tabindex="-1"><a class="header-anchor" href="#_4-1-普通for循环" aria-hidden="true">#</a> 4.1 普通for循环</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;MM&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MM&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MM&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;GG&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出的都是 GG</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-2-增强for循环" tabindex="-1"><a class="header-anchor" href="#_4-2-增强for循环" aria-hidden="true">#</a> 4.2 增强for循环</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;MM&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MM&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MM&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
    s <span class="token operator">=</span> <span class="token string">&quot;GG&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出的都是MM</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function m(h,b){const p=n("ExternalLinkIcon"),e=n("RouterLink");return c(),i("div",null,[d,l("p",null,[a("详见："),s(e,{to:"/java/func/2.JDK.util%E5%8C%85/2-3.Collection.html",target:"_blank"},{default:u(()=>[a("内置函数>Collection+"),s(p)]),_:1})]),v])}const x=o(k,[["render",m],["__file","6-3.Iterator.html.vue"]]);export{x as default};
