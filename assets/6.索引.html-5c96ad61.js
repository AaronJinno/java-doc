import{_ as n,P as a,Q as s,a3 as e}from"./framework-7e8eb00a.js";const t={},p=e(`<p>索引支持在MongoDB中高效地执行查询。</p><ul><li>如果没有索引，MongoDB必须执行全集合扫描，以选择与查询语句匹配的文档。这种扫描全集合的查询效率是非常低的。</li><li>索引项的排序支持有效的相等匹配和基于范围的查询操作。此外，MongoDB还可以使用索引中的排序返回排序结果。</li><li>MongoDB索引使用B树数据结构（确切的说是B-Tree，MySQL是B+Tree）</li></ul><h2 id="索引的类型" tabindex="-1"><a class="header-anchor" href="#索引的类型" aria-hidden="true">#</a> 索引的类型</h2><h4 id="_1-单字段索引" tabindex="-1"><a class="header-anchor" href="#_1-单字段索引" aria-hidden="true">#</a> 1. 单字段索引</h4><p>在文档的单个字段上创建用户定义的升序/降序索引，称为单字段索引（Single Field Index）。</p><p>对于单个字段索引和排序操作，索引键的排序顺序（即升序或降序）并不重要，因为MongoDB可以在任何方向上遍历索引。</p><h4 id="_2-复合索引" tabindex="-1"><a class="header-anchor" href="#_2-复合索引" aria-hidden="true">#</a> 2. 复合索引</h4><p>MongoDB还支持多个字段的用户定义索引，即复合索引（Compound Index）。</p><p>复合索引中列出的字段顺序很重要。例如，如果复合索引由 { userid: 1, score: -1 } 组成，则索引首先按userid正序排序，然后在每个userid的值内，再在按score倒序排序。</p><h4 id="_3-其他索引" tabindex="-1"><a class="header-anchor" href="#_3-其他索引" aria-hidden="true">#</a> 3. 其他索引</h4><ul><li>地理空间索引（Geospatial Index）：为了支持对地理空间坐标数据的有效查询，MongoDB提供了两种特殊的索引：返回结果时使用平面几何的二维索引和返回结果时使用球面几何的二维球面索引。</li><li>文本索引（Text Indexes）：支持在集合中搜索字符串内容。这些文本索引不存储特定于语言的停止词（例如“the”、“a”、“or”），而将集合中的词作为词干，只存储根词。</li><li>哈希索引（Hashed Indexes）：MongoDB提供了散列索引类型，它对字段值的散列进行索引。这些索引在其范围内的值分布更加随机，但只支持相等匹配，不支持基于范围的查询。</li></ul><h2 id="管理索引" tabindex="-1"><a class="header-anchor" href="#管理索引" aria-hidden="true">#</a> 管理索引</h2><h4 id="_1-索引的查看" tabindex="-1"><a class="header-anchor" href="#_1-索引的查看" aria-hidden="true">#</a> 1. 索引的查看</h4><p>getIndexes()方法返回一个集合中的所有索引的数组。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合<span class="token punctuation">.</span><span class="token function">getIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//查看comment集合中所有的索引情况</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">getIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//结果</span>
<span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;_id_&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>_id索引</strong> MongoDB在创建集合的过程中，在_id 字段上创建一个唯一的索引，默认名字为_id_。<br> 注意：该索引是唯一索引，因此值不能重复，即 _id 值不能重复的。在分片集群中，通常使用 _id 作为片键。</p>`,18),o=[p];function i(r,c){return a(),s("div",null,o)}const d=n(t,[["render",i],["__file","6.索引.html.vue"]]);export{d as default};
