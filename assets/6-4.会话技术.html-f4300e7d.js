import{_ as n,o as a,c as s,b as e}from"./app-8e704c97.js";const o="/java-doc/img/java/javaweb/6-4-1.jpg",t={},p=e('<div class="hint-container danger"><p class="hint-container-title">提醒</p><p>当前开发，以移动平台为主，因此优先采用的是Token技术。</p><p>Cookie和Session只有浏览器能用</p></div><h2 id="会话技术介绍" tabindex="-1"><a class="header-anchor" href="#会话技术介绍" aria-hidden="true">#</a> 会话技术介绍</h2><h4 id="_1-会话" tabindex="-1"><a class="header-anchor" href="#_1-会话" aria-hidden="true">#</a> 1. 会话</h4><p>用户打开浏览器，访问web服务器的资源，会话建立，直到有一方断开连接，会话结束。</p><p>在一次会话中可以包含多次请求和响应。</p><ul><li>从浏览器发出请求到服务端响应数据给前端之后，一次会话(在浏览器和服务器之间)就被建立了</li><li>会话被建立后，如果浏览器或服务端都没有被关闭，则会话就会持续建立着</li><li>浏览器和服务器就可以继续使用该会话进行请求发送和响应，上述的整个过程就被称之为会话。</li></ul><h4 id="_2-不同的会话" tabindex="-1"><a class="header-anchor" href="#_2-不同的会话" aria-hidden="true">#</a> 2. 不同的会话</h4><p>每个浏览器与服务器建立的会话都是不同的会话，如图，一共有三个会话。</p><figure><img src="'+o+`" alt="6-4-1" tabindex="0" loading="lazy"><figcaption>6-4-1</figcaption></figure><h4 id="_3-会话跟踪" tabindex="-1"><a class="header-anchor" href="#_3-会话跟踪" aria-hidden="true">#</a> 3. 会话跟踪</h4><p>一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在同一次会话的多次请求间共享数据。</p><ul><li>服务器会收到多个请求，这多个请求可能来自多个浏览器，如上图中的6个请求来自3个浏览器</li><li>服务器需要用来识别请求是否来自同一个浏览器</li><li>服务器用来识别浏览器的过程，这个过程就是会话跟踪</li><li>服务器识别浏览器后就可以在同一个会话中多次请求之间来共享数据</li></ul><h4 id="_4-无状态协议" tabindex="-1"><a class="header-anchor" href="#_4-无状态协议" aria-hidden="true">#</a> 4. 无状态协议</h4><p>浏览器和服务器之间使用的是HTTP请求来进行数据传输，HTTP协议是无状态的，每次浏览器向服务器请求时，服务器都会将该请求视为新的请求。HTTP协议设计成无状态的目的是让每次请求之间相互独立，互不影响，请求与请求之间独立后，就无法实现多次请求之间的数据共享。</p><h4 id="_5-会话追踪技术" tabindex="-1"><a class="header-anchor" href="#_5-会话追踪技术" aria-hidden="true">#</a> 5. 会话追踪技术</h4><ul><li>cookie：客户端会话跟踪技术</li><li>session：服务端会话跟踪技术 这两个技术都可以实现会话跟踪，它们之间最大的区别:Cookie是存储在浏览器端而Session是存储在服务器端</li></ul><h2 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h2><p>客户端会话技术，将数据保存到客户端，以后每次请求都携带Cookie数据进行访问。</p><h4 id="_1-使用步骤" tabindex="-1"><a class="header-anchor" href="#_1-使用步骤" aria-hidden="true">#</a> 1. 使用步骤</h4><ul><li>Servlet-1：创建Cookie对象，绑定数据</li><li>Servlet-1：发送Cookie对象-&gt;给浏览器</li><li>浏览器：保存Cookie，并在下一次请求时携带Cookie</li><li>Servlet-2：拿到浏览器发送请求时携带的Cookie数据</li></ul><h4 id="_2-cookie的相关方法" tabindex="-1"><a class="header-anchor" href="#_2-cookie的相关方法" aria-hidden="true">#</a> 2. Cookie的相关方法</h4><h5 id="_2-1-创建cookie对象" tabindex="-1"><a class="header-anchor" href="#_2-1-创建cookie对象" aria-hidden="true">#</a> 2.1 创建Cookie对象</h5><p>同时构造方法会设置cookie的key 和value</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span>

<span class="token class-name">Cookie</span> cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2-发送cookie对象" tabindex="-1"><a class="header-anchor" href="#_2-2-发送cookie对象" aria-hidden="true">#</a> 2.2 发送Cookie对象</h5><p>将cookie对象通过响应对象Response，发送到客户端。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token class-name">ServletResponse</span><span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span><span class="token class-name">Cookie</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-3-获取cookie数据" tabindex="-1"><a class="header-anchor" href="#_2-3-获取cookie数据" aria-hidden="true">#</a> 2.3 获取Cookie数据</h5><p>可以通过请求对象Request获取cookie，Cookie可能有多个，因此返回的是数组</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">ServletRequest</span><span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-4-获取cookie的name和value" tabindex="-1"><a class="header-anchor" href="#_2-4-获取cookie的name和value" aria-hidden="true">#</a> 2.4 获取Cookie的name和value</h5><p>遍历获取的Cookie数据（数组）,来获取具体的key，value</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token class-name">Cookie</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取Cookie的name</span>
<span class="token class-name">String</span> <span class="token class-name">Cookie</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取Cookie的Value</span>
<span class="token comment">//循环Cookie[]获取Cookie</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cookie</span> c <span class="token operator">:</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> value <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-cookie使用范例" tabindex="-1"><a class="header-anchor" href="#_3-cookie使用范例" aria-hidden="true">#</a> 3. Cookie使用范例</h4><h5 id="_3-1-servlet1-创建cookie" tabindex="-1"><a class="header-anchor" href="#_3-1-servlet1-创建cookie" aria-hidden="true">#</a> 3.1 servlet1：创建cookie</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//1.创建Cookie对象</span>
    <span class="token class-name">Cookie</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//2.发送Cookie</span>
    response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-servlet2-获取cookie" tabindex="-1"><a class="header-anchor" href="#_3-2-servlet2-获取cookie" aria-hidden="true">#</a> 3.2 servlet2：获取cookie</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//3. 获取Cookie</span>
    <span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cs <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//4.获取数据，遍历Cookies</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>cs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cookie</span> c <span class="token operator">:</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> name <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               <span class="token class-name">String</span> value <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    
               <span class="token keyword">break</span><span class="token punctuation">;</span>             
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-cookie的工作原理" tabindex="-1"><a class="header-anchor" href="#_4-cookie的工作原理" aria-hidden="true">#</a> 4. Cookie的工作原理</h4><p>提示：Cookie有关的所有操作都是基于请求头和响应头的，只是Servlet直接封装了一套api，省去了直接操作消息头。</p><h5 id="_4-1-servlet1创建并发送cookie" tabindex="-1"><a class="header-anchor" href="#_4-1-servlet1创建并发送cookie" aria-hidden="true">#</a> 4.1 Servlet1创建并发送Cookie</h5><p>创建new Cookie(String name, String value)的本质是创建了一个响应头</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>set<span class="token operator">-</span>cookie<span class="token operator">:</span>msg<span class="token operator">=</span>hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后通过response响应给了浏览器，响应头里就有了set-cookie</p><h2 id="session" tabindex="-1"><a class="header-anchor" href="#session" aria-hidden="true">#</a> Session</h2><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2>`,46),i=[p];function c(l,u){return a(),s("div",null,i)}const k=n(t,[["render",c],["__file","6-4.会话技术.html.vue"]]);export{k as default};
