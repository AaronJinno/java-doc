import{_ as n,o as a,c as s,b as e}from"./app-bac1dcaf.js";const t="/java-doc/img/frame/springboot/3-3-1.png",p={},i=e('<div class="hint-container tip"><p class="hint-container-title">什么是多环境</p><p>电脑上写的程序最终要放到别人的服务器上去运行。每个计算机环境不一样，这就是多环境。</p><p>比如连接的数据库不一样，设置的访问端口不一样等等。</p></div><p>常见的多环境开发主要兼顾3种环境设置：</p><ul><li>生产环境：服务器部署使用</li><li>开发环境：开发人员使用</li><li>测试环境：公司测试部门使用</li></ul><h2 id="i-yml-单一文件版" tabindex="-1"><a class="header-anchor" href="#i-yml-单一文件版" aria-hidden="true">#</a> Ⅰ. yml 单一文件版</h2><p>在一个yaml文件中，设置三种环境。</p><h4 id="_1-示例" tabindex="-1"><a class="header-anchor" href="#_1-示例" aria-hidden="true">#</a> 1. 示例</h4><figure><img src="'+t+`" alt="3-3-1" tabindex="0" loading="lazy"><figcaption>3-3-1</figcaption></figure><h4 id="_2-语法" tabindex="-1"><a class="header-anchor" href="#_2-语法" aria-hidden="true">#</a> 2. 语法</h4><p>以---分割各个环境，spring.profiles：指定环境名，名字随意。</p><p>最顶层是来配置当前启动的环境的。一般最顶层也会加上一些通用的配置。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> pro       <span class="token comment"># 启动pro</span>
<span class="token punctuation">---</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> pro
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
<span class="token punctuation">---</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> dev
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">81</span>
<span class="token punctuation">---</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span> 
  <span class="token key atrule">config</span><span class="token punctuation">:</span> <span class="token comment">#profiles 过时了，可以采用config.activate.on-profile代替</span>
    <span class="token key atrule">activate</span><span class="token punctuation">:</span>
      <span class="token key atrule">on-profile</span><span class="token punctuation">:</span> test
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">82</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-yml-多文件版" tabindex="-1"><a class="header-anchor" href="#ii-yml-多文件版" aria-hidden="true">#</a> Ⅱ. yml 多文件版</h2><p>单个文件存放多个环境配置，不容易维护，且容易暴露信息。</p><p>比如：生产环境的密码被测试任意拿到。</p><h4 id="_1-定义多个配置文件" tabindex="-1"><a class="header-anchor" href="#_1-定义多个配置文件" aria-hidden="true">#</a> 1. 定义多个配置文件</h4><p>在resource目录下设置如下配置文件（注意：命名严格要求application-xx）</p><ul><li>application.yml【主配置文件，存放通用配置】</li><li>application-dev.yml【dev环境配置文件】</li><li>application-test.yml【test环境配置文件】</li><li>application-pro.yml【生产环境配置文件】</li></ul><h4 id="_2-应用" tabindex="-1"><a class="header-anchor" href="#_2-应用" aria-hidden="true">#</a> 2. 应用</h4><p>在主配置文件中指定要引入哪个环境的配置文件。</p><p>主配置文件还会存放通用的配置信息，环境分类配置文件中常用于设置冲突属性（局部）。<br> 启用的名字就是application-后面的名字。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev <span class="token comment">#启用dev环境的配置文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-多环境开发控制" tabindex="-1"><a class="header-anchor" href="#iii-多环境开发控制" aria-hidden="true">#</a> Ⅲ. 多环境开发控制</h2><h4 id="_1-include" tabindex="-1"><a class="header-anchor" href="#_1-include" aria-hidden="true">#</a> 1. include</h4><p>将所有的配置根据功能对配置文件中的信息进行拆分，并制作成独立的配置文件。</p><p>命名规则如下：</p><ul><li>application-devDB.yml</li><li>application-devRedis.yml</li><li>application-devMVC.yml</li></ul><h5 id="_1-1-使用" tabindex="-1"><a class="header-anchor" href="#_1-1-使用" aria-hidden="true">#</a> 1.1 使用</h5><p>使用include属性在激活指定环境的情况下，同时对多个环境进行加载使其生效，多个环境间使用逗号分隔。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">pring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev <span class="token comment"># 主环境dev</span>
       <span class="token key atrule">include</span><span class="token punctuation">:</span> devDB<span class="token punctuation">,</span>devRedis<span class="token punctuation">,</span>devMVC <span class="token comment">#dev环境额外新增的配置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-优先级" tabindex="-1"><a class="header-anchor" href="#_1-2-优先级" aria-hidden="true">#</a> 1.2 优先级</h5><p>当主环境dev与其他环境有相同属性时，主环境属性生效；其他环境中有相同属性时，最后加载的环境属性生效。</p><h4 id="_2-group" tabindex="-1"><a class="header-anchor" href="#_2-group" aria-hidden="true">#</a> 2. group</h4><p>include有一个问题，比如我要切换dev环境为pro时，include也要修改。<br> SpringBoot从2.4版开始使用group属性替代include属性，降低了配置书写量。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev
       <span class="token key atrule">group</span><span class="token punctuation">:</span>
          <span class="token key atrule">&quot;dev&quot;</span><span class="token punctuation">:</span> devDB<span class="token punctuation">,</span>devRedis<span class="token punctuation">,</span>devMVC
          <span class="token key atrule">&quot;pro&quot;</span><span class="token punctuation">:</span> proDB<span class="token punctuation">,</span>proRedis<span class="token punctuation">,</span>proMVC
          <span class="token key atrule">&quot;test&quot;</span><span class="token punctuation">:</span> testDB<span class="token punctuation">,</span>testRedis<span class="token punctuation">,</span>testMVC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，active指定哪个环境组生效。group中配置各个组环境组，其中键为主环境，值为额外include的环境。主环境的优先级最低（最先加载），其他的根据加载顺序确定。</p><h4 id="_3-maven设置多环境" tabindex="-1"><a class="header-anchor" href="#_3-maven设置多环境" aria-hidden="true">#</a> 3. Maven设置多环境</h4><p>先在maven环境中设置用什么具体的环境，在SpringBoot中读取maven设置的环境即可。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--设置多环境--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>env_dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile.active</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile.active</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span> //设置默认启动的环境
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>env_pro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile.active</span><span class="token punctuation">&gt;</span></span>pro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile.active</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-1-springboot中读取maven设置值" tabindex="-1"><a class="header-anchor" href="#_3-1-springboot中读取maven设置值" aria-hidden="true">#</a> 3.1 SpringBoot中读取maven设置值</h5><p>SpringBoot使用@..@占位符读取Maven对应的配置属性值。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
     <span class="token key atrule">active</span><span class="token punctuation">:</span> @profile.active@ <span class="token comment">#动态读取配置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-使用" tabindex="-1"><a class="header-anchor" href="#_3-2-使用" aria-hidden="true">#</a> 3.2 使用</h5><p>执行Maven打包指令，并在生成的boot打包文件.jar文件中查看对应信息，发现 @profile.active@被替换成了具体的值。</p><h5 id="_3-3-debug" tabindex="-1"><a class="header-anchor" href="#_3-3-debug" aria-hidden="true">#</a> 3.3 debug</h5><p>基于SpringBoot读取Maven配置属性的前提下，如果在Idea下测试工程时pom.xml每次更新需要手动compile方可生效。</p>`,45),l=[i];function c(o,u){return a(),s("div",null,l)}const r=n(p,[["render",c],["__file","3-3.多环境开发.html.vue"]]);export{r as default};
