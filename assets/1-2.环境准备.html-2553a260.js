import{_ as t,r as o,o as l,c as p,a as n,b as s,d as e,e as i}from"./app-e33dd8dd.js";const c="/java-doc/img/sql/es/1-2-1.jpg",r={},u=n("h2",{id:"es安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#es安装","aria-hidden":"true"},"#"),s(" ES安装")],-1),d={href:"https://www.elastic.co/cn/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.elastic.co/cn/downloads/past-releases#elasticsearch",target:"_blank",rel:"noopener noreferrer"},k=i('<p>当前最新版本是8.8.1</p><h4 id="_1-系统" tabindex="-1"><a class="header-anchor" href="#_1-系统" aria-hidden="true">#</a> 1. 系统</h4><p>Elasticsearch 分为 Linux 、MacOS 和 Windows 版本，先使用Windows环境作为学习和开发使用，生产时要部署到Linux服务器。</p><p>Linux环境的部署，见后续章节。</p><h4 id="_2-安装软件" tabindex="-1"><a class="header-anchor" href="#_2-安装软件" aria-hidden="true">#</a> 2. 安装软件</h4><p>该软件为绿色软件，将下载的压缩包解压后即可使用。</p><p>目录结构如下：</p><figure><img src="'+c+`" alt="1-2-1" tabindex="0" loading="lazy"><figcaption>1-2-1</figcaption></figure><ul><li>bin：可执行脚本目录</li><li>config：配置目录</li><li>jdk：内置JDK目录</li><li>lib：类库</li><li>logs：日志目录</li><li>modules：模块目录</li><li>plugins：插件目录</li></ul><p>由目录结构可知，ElasticSearch是基于Java开发的。</p><h4 id="_3-启动服务" tabindex="-1"><a class="header-anchor" href="#_3-启动服务" aria-hidden="true">#</a> 3. 启动服务</h4><p>解压后，进入 bin 文件目录，点击 elasticsearch.bat 文件启动 ES 服务</p><p>由于ES内置了JDK，所以默认不会采用电脑里的JDK，而是用自己捆绑的JDK。</p><h4 id="_4-访问测试" tabindex="-1"><a class="header-anchor" href="#_4-访问测试" aria-hidden="true">#</a> 4. 访问测试</h4><ul><li>9300 端口为 Elasticsearch 集群间组件的通信端口</li><li>9200 端口为浏览器访问的 http协议 RESTful 端口。</li></ul><p>打开浏览器输入地址：<code>http://localhost:9200</code>，进行访问</p><p>访问结果如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;PC-20210318BCMF&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cluster_name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;elasticsearch&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;cluster_uuid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;PbTqhy8eTVS2B7eO_0P_oA&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;number&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;8.8.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build_flavor&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build_type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;zip&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build_hash&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;f8edfccba429b6477927a7c1ce1bc6729521305e&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build_date&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2023-06-05T21:32:25.188464208Z&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build_snapshot&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;lucene_version&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;9.6.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;minimum_wire_compatibility_version&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;7.17.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;minimum_index_compatibility_version&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;7.0.0&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tagline&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;You Know, for Search&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-debug" tabindex="-1"><a class="header-anchor" href="#_5-debug" aria-hidden="true">#</a> 5. debug</h4><h5 id="取消安全验证" tabindex="-1"><a class="header-anchor" href="#取消安全验证" aria-hidden="true">#</a> 取消安全验证</h5><div class="hint-container danger"><p class="hint-container-title">警告</p><p>对于一个未启动过的ES软件，配置文件中是没有安全验证相关的代码的，需要先启动一次，这些代码才会出现。</p><p>同时：启动一次后，config目录下才会出现certs目录(证书)和elasticsearch.keystore文件。</p></div><p>当启动Elasticsearch后，在浏览器输入地址 <code>http://localhost:9200/</code>，会产生报错。</p><ul><li>报错信息：received plaintext http traffic on an https channel, closing connection</li><li>原因：Elasticsearch在Windows下开启了安全认证，虽然started成功，但访问<code>http://localhost:9200/</code>失败</li><li>解决方案：找到config/目录下面的elasticsearch.yml配置文件，把安全认证开关从原先的true都改成false，实现免密登录访问即可，修改这两处都为false后：</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># Enable security features</span>
<span class="token key atrule">xpack.security.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 这里由true改为false</span>

<span class="token key atrule">xpack.security.enrollment.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">xpack.security.http.ssl</span><span class="token punctuation">:</span>
  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 这里由true改为false</span>
  <span class="token key atrule">keystore.path</span><span class="token punctuation">:</span> certs/http.p12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> HTTP</h2><p>浏览器是通过HTTP协议向ElasticSearch服务器发送请求的。</p>`,26),m=n("li",null,"RESTFul：通过RESTFul风格访问ES服务器的资源",-1),b={href:"https://aaronjinno.github.io/front-doc/basic/js/8.%E5%85%B6%E4%BB%96/8-3.json.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.postman.com/",target:"_blank",rel:"noopener noreferrer"};function _(q,f){const a=o("ExternalLinkIcon");return l(),p("div",null,[u,n("p",null,[n("a",d,[s("ElasticSearch官网"),e(a)])]),n("p",null,[n("a",h,[s("下载地址"),e(a)])]),k,n("ul",null,[m,n("li",null,[n("a",b,[s("JSON"),e(a)]),s("：通过JSON格式传递数据")]),n("li",null,[n("a",v,[s("Postman"),e(a)]),s("：通过Postman工具进行数据访问的测试")])])])}const y=t(r,[["render",_],["__file","1-2.环境准备.html.vue"]]);export{y as default};
