const t=JSON.parse('{"key":"v-0320aed6","path":"/java/javase/9.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/9-5.TCP%E7%BC%96%E7%A8%8B.html","title":"9-5. TCP编程","lang":"zh-CN","frontmatter":{"title":"9-5. TCP编程","date":"2023-06-06T00:00:00.000Z","description":"1. 基于Socket的TCP编程 Java语言的基于套接字编程分为服务端编程和客户端编程，其通信模型如图所示： 9-5-1 2. 客户端Socket 客户端Socket 的工作过程包含以下四个基本的步骤 创建Socket：根据指定服务端的 IP 地址或端口号构造 Socket 类对象。若服务器端; 响应，则建立客户端到服务器的通信线路。若连接失败，会...","head":[["meta",{"property":"og:url","content":"https://aicell.cc/java-doc/java/javase/9.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/9-5.TCP%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Java全栈"}],["meta",{"property":"og:title","content":"9-5. TCP编程"}],["meta",{"property":"og:description","content":"1. 基于Socket的TCP编程 Java语言的基于套接字编程分为服务端编程和客户端编程，其通信模型如图所示： 9-5-1 2. 客户端Socket 客户端Socket 的工作过程包含以下四个基本的步骤 创建Socket：根据指定服务端的 IP 地址或端口号构造 Socket 类对象。若服务器端; 响应，则建立客户端到服务器的通信线路。若连接失败，会..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T18:22:09.000Z"}],["meta",{"property":"article:author","content":"Victor Da V"}],["meta",{"property":"article:published_time","content":"2023-06-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-07T18:22:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9-5. TCP编程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-07T18:22:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Victor Da V\\",\\"url\\":\\"https://aicell.cc/about\\"}]}"]]},"headers":[],"git":{"createdTime":1686162129000,"updatedTime":1686162129000,"contributors":[{"name":"Aaron Jinno","email":"aaronjinno@gmail.com","commits":1}]},"readingTime":{"minutes":3.35,"words":1005},"filePathRelative":"java/javase/9.网络编程/9-5.TCP编程.md","localizedDate":"2023年6月6日","excerpt":"","autoDesc":true}');export{t as data};
