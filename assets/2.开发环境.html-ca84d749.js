import{_ as i,o as a,c as e,e as n}from"./app-c8f1ef72.js";const t="/java-doc/img/item/苍穹外卖/005.png",r="/java-doc/img/item/苍穹外卖/006.png",o={},d=n('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>因为是练习项目，不再区分开发环境、测试环境和正式环境</p><p>除了正在开发的源码，其他内容直接部署到Linux服务器。</p></div><figure><img src="'+t+'" alt="005" tabindex="0" loading="lazy"><figcaption>005</figcaption></figure><h2 id="前端-admin" tabindex="-1"><a class="header-anchor" href="#前端-admin" aria-hidden="true">#</a> 前端-admin</h2><p>本项目是用来练习Spring Boot的，所以前端代码直接采用提供好的即可。</p><h4 id="源码" tabindex="-1"><a class="header-anchor" href="#源码" aria-hidden="true">#</a> 源码</h4><p>已有前端源码，所有内容都已经编写好，且已经build好了，如果有需要修改的地方，可以直接修改源码，再进行重写打包。</p><h4 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h4><p>前端代码在服务器使用Nginx部署好即可，开放端口用于访问</p><p>详见下方：服务器部署</p><h2 id="前端-client" tabindex="-1"><a class="header-anchor" href="#前端-client" aria-hidden="true">#</a> 前端-client</h2><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>客户端是用微信小程序开发的，需要配置微信小程序环境。</p><p>TBD</p></div><h2 id="后端-springboot" tabindex="-1"><a class="header-anchor" href="#后端-springboot" aria-hidden="true">#</a> 后端-SpringBoot</h2><p>使用IDEA创建Spring Boot项目，该项目设计为多模块SpringBoot项目。</p><h4 id="_1-项目结构" tabindex="-1"><a class="header-anchor" href="#_1-项目结构" aria-hidden="true">#</a> 1. 项目结构</h4><p>项目名：sky-takeout</p><figure><img src="'+r+'" alt="006" tabindex="0" loading="lazy"><figcaption>006</figcaption></figure><ul><li>sky-takeout：项目名，Maven父工程，同意管理依赖版本，聚合其他子模块 <ul><li>sky-common：子模块，存放公共类，例如：工具类、常量类、异常类等</li><li>sky-pojo：子模块，存放实体类、VO、DTO等</li><li>sky-server：子模块，API模块，后端服务，存放配置文件、Controller、Service、Mapper等</li></ul></li></ul><h4 id="_2-环境" tabindex="-1"><a class="header-anchor" href="#_2-环境" aria-hidden="true">#</a> 2. 环境</h4><ul><li>Java：JDK17</li><li>依赖：以SpringBoot2.7.x为核心构建依赖（详见Maven依赖锁定）</li></ul>',19),c=[d];function l(h,s){return a(),e("div",null,c)}const _=i(o,[["render",l],["__file","2.开发环境.html.vue"]]);export{_ as default};
