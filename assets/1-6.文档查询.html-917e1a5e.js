import{_ as n,o as s,c as a,e as p}from"./app-b355f476.js";const t={},e=p(`<h2 id="i-基本查询" tabindex="-1"><a class="header-anchor" href="#i-基本查询" aria-hidden="true">#</a> Ⅰ. 基本查询</h2><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. 语法</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>query<span class="token operator">&gt;</span><span class="token punctuation">,</span><span class="token punctuation">[</span>projection<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li>query：可选。使用查询运算符指定选择筛选器。若要返回集合中的所有文档，请省略此参数或传递空文档( {} )。</li><li>projection：可选，指定要在与查询筛选器匹配的文档中返回的字段（投影）。若要返回匹配文档中的所有字段，请省略此参数。</li></ul><h4 id="_2-查询所有数据" tabindex="-1"><a class="header-anchor" href="#_2-查询所有数据" aria-hidden="true">#</a> 2. 查询所有数据</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
or
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-根据条件查询数据" tabindex="-1"><a class="header-anchor" href="#_3-根据条件查询数据" aria-hidden="true">#</a> 3. 根据条件查询数据</h4><p>根据query条件查询数据，默认会返回所有符合条件的数据。<br> 如果只需要返回符合条件的第一条数据，我们可以使用ﬁndOne命令来实现。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-投影查询" tabindex="-1"><a class="header-anchor" href="#_4-投影查询" aria-hidden="true">#</a> 4. 投影查询</h4><p>如果要查询结果返回部分字段，则需要使用投影查询（不显示所有字段，只显示指定的字段）。<br> PS： _id字段默认总是显示的。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">state</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-文档的分页查询" tabindex="-1"><a class="header-anchor" href="#ii-文档的分页查询" aria-hidden="true">#</a> Ⅱ. 文档的分页查询</h2><h4 id="_1-统计查询" tabindex="-1"><a class="header-anchor" href="#_1-统计查询" aria-hidden="true">#</a> 1. 统计查询</h4><p>统计查询使用count()方法返回符合条件的全部记录条数。<br> countDocuments方法 用来返回文档中的记录总数。<br> 语法如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">countDocuments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong></p><ul><li>query：查询条件</li><li>options：可选，用于修改计数的额外选项</li></ul><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//统计所有记录数</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">countDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">//按条件统计记录数：</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-分页列表查询" tabindex="-1"><a class="header-anchor" href="#_2-分页列表查询" aria-hidden="true">#</a> 2. 分页列表查询</h4><p>可以使用limit()方法来读取指定数量的数据，使用skip()方法来跳过指定数量的数据(两个方法可以单独使用，也可以一起使用)。</p><ul><li>如果你想返回指定条数的记录，可以在ﬁnd方法后调用limit来返回结果(TopN)，默认值20</li><li>skip方法同样接受一个数字参数作为跳过的记录条数。（前N个不要）,默认值是0</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//分页查询，每页查两个</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-排序查询" tabindex="-1"><a class="header-anchor" href="#_3-排序查询" aria-hidden="true">#</a> 3. 排序查询</h4><p>sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。</p><p>排序方式可以是多个字段。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>排序方式<span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>示例</strong><br> 对userid降序排列，并对访问量进行升序排列</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意</strong><br> skip(), limilt(), sort()三个放在一起执行的时候，执行的顺序是先 sort(), 然后是 skip()，最后是显示的 limit()，和命令编写顺序无关。</p><h2 id="iii-更多复杂查询" tabindex="-1"><a class="header-anchor" href="#iii-更多复杂查询" aria-hidden="true">#</a> Ⅲ. 更多复杂查询</h2><h4 id="_1-正则条件查询" tabindex="-1"><a class="header-anchor" href="#_1-正则条件查询" aria-hidden="true">#</a> 1. 正则条件查询</h4><div class="hint-container tip"><p class="hint-container-title">提示</p><p>正则表达式是js的语法</p></div><p>MongoDB的模糊查询是通过正则表达式的方式实现的。格式如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">字段</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">正则表达式</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//查询评论内容包含hello的</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//查询用户id是1开头的</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-比较查询" tabindex="-1"><a class="header-anchor" href="#_2-比较查询" aria-hidden="true">#</a> 2. 比较查询</h4><p>查询的时候，可以用上比较运算符，如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//field &gt; value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//field &lt; value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gte</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//field &gt;= value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//field &lt;= value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//field != value</span>

<span class="token comment">//查询评论点赞数量大于700的记录</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-包含查询" tabindex="-1"><a class="header-anchor" href="#_3-包含查询" aria-hidden="true">#</a> 3. 包含查询</h4><p>包含使用<code>$in</code>操作符，不包含使用<code>$nin</code>操作符。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//查询评论的集合中userid字段包含1003或1004的文档</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token punctuation">{</span>$<span class="token keyword">in</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//查询评论集合中userid字段不包含1003和1004的文档</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$nin</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-条件连接查询" tabindex="-1"><a class="header-anchor" href="#_4-条件连接查询" aria-hidden="true">#</a> 4. 条件连接查询</h4><p>我们如果需要查询同时满足两个以上条件，需要使用 <code>$and</code> 操作符将条件进行关联（相 当于SQL的<code>and</code>）。<br> 如果两个以上条件之间是或者的关系，我们使用 <code>$or</code> 操作符进行关联</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">$and</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token punctuation">{</span> 条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span> <span class="token punctuation">]</span>

<span class="token comment">//查询评论集合中likenum大于等于700 并且小于2000的文档：</span>
b<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token literal-property property">$and</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token comment">//查询评论集合中userid为1003，或者点赞数小于1000的文档记录</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","1-6.文档查询.html.vue"]]);export{r as default};
