import{_ as o,r as t,o as h,c as s,a as i,b as e,d as a,w as r,e as d}from"./app-c8f1ef72.js";const c="/java-doc/img/item/苍穹外卖/001.png",p="/java-doc/img/item/苍穹外卖/002.png",u="/java-doc/img/item/苍穹外卖/003.png",g="/java-doc/img/item/苍穹外卖/004.png",_={},f=i("br",null,null,-1),m={class:"hint-container info"},x=i("p",{class:"hint-container-title"},"介绍",-1),b={href:"https://www.bilibili.com/video/BV1TP411v7v6",target:"_blank",rel:"noopener noreferrer"},E=i("p",null,"该项目是瑞吉外卖的进阶版。",-1),S=d('<br><h2 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍</h2><p>本项目（苍穹外卖）是专门为餐饮企业（餐厅、饭店）定制的一款软件产品，包括 系统管理后台 和 小程序端应用 两部分。</p><p>其中系统管理后台主要提供给餐饮企业内部员工使用，可以对餐厅的分类、菜品、套餐、订单、员工等进行管理维护，对餐厅的各类数据进行统计，同时也可进行来单语音播报功能。</p><figure><img src="'+c+'" alt="001" tabindex="0" loading="lazy"><figcaption>001</figcaption></figure><p>小程序端主要提供给消费者使用，可以在线浏览菜品、添加购物车、下单、支付、催单等。</p><figure><img src="'+p+'" alt="002" tabindex="0" loading="lazy"><figcaption>002</figcaption></figure><h4 id="项目目标" tabindex="-1"><a class="header-anchor" href="#项目目标" aria-hidden="true">#</a> 项目目标</h4><p>该项目用来练习：基于 <strong>Spring Boot</strong> 的标准项目开发。</p><p>开发过程中会用到MVC前后的分离结构，和众多常用开发技术。</p><h4 id="原型图" tabindex="-1"><a class="header-anchor" href="#原型图" aria-hidden="true">#</a> 原型图</h4><p>产品原型主要用于展示项目的功能，并不是最终的页面效果。</p>',12),v=i("br",null,null,-1),B=i("br",null,null,-1),k=d('<h2 id="功能模块" tabindex="-1"><a class="header-anchor" href="#功能模块" aria-hidden="true">#</a> 功能模块</h2><figure><img src="'+u+'" alt="003" tabindex="0" loading="lazy"><figcaption>003</figcaption></figure><h4 id="管理端" tabindex="-1"><a class="header-anchor" href="#管理端" aria-hidden="true">#</a> 管理端</h4><ul><li>权限管理：登录、退出，内部员工必须登录后,才可以访问系统管理后台</li><li>员工管理：管理员可以在系统后台对员工信息进行管理，包含查询、新增、编辑、禁用等功能</li><li>分类管理：主要对当前餐厅经营的 菜品分类 或 套餐分类 进行管理维护， 包含查询、新增、修改、删除等功能</li><li>菜品管理：主要维护各个分类下的菜品信息，包含查询、新增、修改、删除、启售、停售等功能</li><li>套餐管理：主要维护当前餐厅中的套餐信息，包含查询、新增、修改、删除、启售、停售等功能</li><li>订单管理：主要维护用户在移动端下的订单信息，包含查询、取消、派送、完成，以及订单报表下载等功能</li><li>数据统计：主要完成对餐厅的各类数据统计，如营业额、用户数量、订单等</li></ul><h4 id="用户端应用" tabindex="-1"><a class="header-anchor" href="#用户端应用" aria-hidden="true">#</a> 用户端应用</h4><ul><li>登录：用户需要通过微信授权后登录使用小程序进行点餐</li><li>个人中心：在个人中心页面中会展示当前用户的基本信息, 用户可以管理收货地址, 也可以查询历史订单数据</li><li>点餐：在点餐界面需要展示出菜品分类/套餐分类, 并根据当前选择的分类加载其中的菜品信息, 供用户查询选择</li><li>购物车：用户选中的菜品就会加入用户的购物车, 主要包含 查询购物车、加入购物车、删除购物车、清空购物车等功能</li><li>下单支付：用户选完菜品/套餐后, 可以对购物车菜品进行结算支付, 这时就需要进行订单的支付</li></ul><h4 id="角色介绍" tabindex="-1"><a class="header-anchor" href="#角色介绍" aria-hidden="true">#</a> 角色介绍</h4><ul><li>管理员：后台系统超管，拥有所有权限</li><li>员工：后台系统普通员工，仅能管理菜品和订单</li><li>用户：使用用户端应用</li></ul><h2 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型" aria-hidden="true">#</a> 技术选型</h2><p>关于本项目的技术选型, 我们将会从 用户层、网关层、应用层、数据层 这几个方面进行介绍</p><figure><img src="'+g+'" alt="004" tabindex="0" loading="lazy"><figcaption>004</figcaption></figure><h4 id="用户层-前端" tabindex="-1"><a class="header-anchor" href="#用户层-前端" aria-hidden="true">#</a> 用户层：前端</h4><p>包括：管理后台和微信小程序客户端。</p><p>涉及：H5、Vue.js、ElementUI、apache echarts(展示图表)、微信开发等技术</p><h4 id="网关层" tabindex="-1"><a class="header-anchor" href="#网关层" aria-hidden="true">#</a> 网关层</h4><p>Nginx是一个服务器，主要用来作为Http服务器，部署静态资源，访问性能高。</p><p>在Nginx中还有两个比较重要的作用：反向代理和负载均衡，在进行项目部署时，要实现Tomcat的负载均衡，就可以通过Nginx来实现。</p><h4 id="应用层" tabindex="-1"><a class="header-anchor" href="#应用层" aria-hidden="true">#</a> 应用层</h4><ul><li>SpringBoot： 快速构建Spring项目, 采用 &quot;约定优于配置&quot; 的思想, 简化Spring项目的配置开发。</li><li>SpringMVC：SpringMVC是spring框架的一个模块，springmvc和spring无需通过中间整合层进行整合，可以无缝集成。</li><li>Spring Task: 由Spring提供的定时任务框架。</li><li>httpclient: 主要实现了对http请求的发送。</li><li>Spring Cache: 由Spring提供的数据缓存框架</li><li>JWT: 用于对应用程序上的用户进行身份验证的标记。</li><li>阿里云OSS: 对象存储服务，在项目中主要存储文件，如图片等。</li><li>Swagger： 可以自动的帮助开发人员生成接口文档，并对接口进行测试。</li><li>POI: 封装了对Excel表格的常用操作。</li><li>WebSocket: 一种通信网络协议，使客户端和服务器之间的数据交换更加简单，用于项目的来单、催单功能实现。</li></ul><h4 id="数据层" tabindex="-1"><a class="header-anchor" href="#数据层" aria-hidden="true">#</a> 数据层</h4><ul><li>MySQL： 关系型数据库, 本项目的核心业务数据都会采用MySQL进行存储。</li><li>Redis： 基于key-value格式存储的内存数据库, 访问速度快, 经常使用它做缓存。</li><li>Mybatis： 本项目持久层将会使用Mybatis开发。</li><li>pagehelper: 分页插件。</li><li>spring data redis: 简化java代码操作Redis的API。</li></ul><h4 id="工具" tabindex="-1"><a class="header-anchor" href="#工具" aria-hidden="true">#</a> 工具</h4><ul><li>git: 版本控制工具, 在团队协作中, 使用该工具对项目中的代码进行管理。</li><li>maven: 项目构建工具。</li><li>junit：单元测试工具，开发人员功能实现完毕后，需要通过junit对功能进行单元测试。</li><li>postman: 接口测工具，模拟用户发起的各类HTTP请求，获取对应的响应结果。</li></ul>',23);function A(y,V){const l=t("ExternalLinkIcon"),n=t("RouterLink");return h(),s("div",null,[f,i("div",m,[x,i("p",null,[e("该项目来自于黑马程序员的 "),i("a",b,[e("苍穹外卖"),a(l)])]),E]),S,i("p",null,[a(n,{to:"/file/axure/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96_%E7%94%A8%E6%88%B7%E7%AB%AF/index.html",target:"_blank"},{default:r(()=>[e("苍穹外卖前台（用户端）"),a(l)]),_:1}),v,B]),i("p",null,[a(n,{to:"/file/axure/%E8%8B%8D%E7%A9%B9%E5%A4%96%E5%8D%96_%E7%AE%A1%E7%90%86%E7%AB%AF/index.html",target:"_blank"},{default:r(()=>[e("苍穹外卖后台（管理端）"),a(l)]),_:1})]),k])}const M=o(_,[["render",A],["__file","map.html.vue"]]);export{M as default};
