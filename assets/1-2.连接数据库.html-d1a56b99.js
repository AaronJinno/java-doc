import{_ as t,r as p,o,c,a as n,b as s,d as i,e as a}from"./app-9484c6b3.js";const l="/java-doc/img/java/javaweb/1-2-1.jpg",u="/java-doc/img/java/javaweb/1-2-2.jpg",r="/java-doc/img/java/javaweb/1-2-3.jpg",d="/java-doc/img/java/javaweb/1-2-4.jpg",k={},v=a('<h2 id="i-安装驱动" tabindex="-1"><a class="header-anchor" href="#i-安装驱动" aria-hidden="true">#</a> Ⅰ. 安装驱动</h2><h4 id="_1-driver-驱动介绍" tabindex="-1"><a class="header-anchor" href="#_1-driver-驱动介绍" aria-hidden="true">#</a> 1. Driver：驱动介绍</h4><p>JDK中只有JDBC定义的一系列操作数据库的接口，并没有预装驱动，需要我们自己下载</p><p>目前：以MySql驱动进行操作。</p><h4 id="_2-下载mysql驱动" tabindex="-1"><a class="header-anchor" href="#_2-下载mysql驱动" aria-hidden="true">#</a> 2. 下载MySQL驱动</h4>',5),m={href:"https://downloads.mysql.com/archives/c-j/",target:"_blank",rel:"noopener noreferrer"},b=a('<figure><img src="'+l+'" alt="1-2-1" tabindex="0" loading="lazy"><figcaption>1-2-1</figcaption></figure><h4 id="_3-驱动文件介绍" tabindex="-1"><a class="header-anchor" href="#_3-驱动文件介绍" aria-hidden="true">#</a> 3. 驱动文件介绍</h4><p>解压后的驱动文件，其中：</p><ul><li>src：MySQL的JDBC驱动源码（.java）</li><li>mysql-connector-java-8.0.27.jar：jar包，MySql的JDBC驱动包</li></ul><figure><img src="'+u+'" alt="1-2-2" tabindex="0" loading="lazy"><figcaption>1-2-2</figcaption></figure><h4 id="_4-安装并使用驱动" tabindex="-1"><a class="header-anchor" href="#_4-安装并使用驱动" aria-hidden="true">#</a> 4. 安装并使用驱动</h4><ul><li>①将jar包移动到项目目录下，如：Learn/JDBC/lib (JDBC模块的lib目录)</li><li>②在idea中，右键jar包文件：add to Library，将jar包加载到扩展库</li><li>③如图，选择jar包的等级和要加载到哪个模块就OK了。</li></ul><figure><img src="'+r+'" alt="1-2-3" tabindex="0" loading="lazy"><figcaption>1-2-3</figcaption></figure><h4 id="_5-加载驱动源码" tabindex="-1"><a class="header-anchor" href="#_5-加载驱动源码" aria-hidden="true">#</a> 5. 加载驱动源码</h4><p>加载的第三方jar包都是class文件，查看到的源码是经过反编译的，需要将真正的源码导入。<br> 在查看mysql-connector-java-8.0.27.jar中的class文件时，会提示：</p><figure><img src="'+d+`" alt="1-2-4" tabindex="0" loading="lazy"><figcaption>1-2-4</figcaption></figure><p>点击右边的Choose Source，选择之前解压的MySQL驱动目录，选择src目录作为源码来源。</p><p>URL：获取要连接的数据库信息</p><h2 id="ii-数据库连接要素" tabindex="-1"><a class="header-anchor" href="#ii-数据库连接要素" aria-hidden="true">#</a> Ⅱ. 数据库连接要素</h2><p>连接数据库，必备条件有三个（前提先创建好了数据库）：</p><ul><li>Driver：数据库驱动，JDK只有接口，需要安装具体的实现类</li><li>URL：即要连接的数据库地址</li><li>用户名、密码：连接数据库的用户名密码</li></ul><h4 id="_1-driver" tabindex="-1"><a class="header-anchor" href="#_1-driver" aria-hidden="true">#</a> 1. Driver</h4><p>见：安装驱动。</p><h4 id="_2-url" tabindex="-1"><a class="header-anchor" href="#_2-url" aria-hidden="true">#</a> 2. URL</h4><p>以MySQL为例：URL的格式为：<code>jdbc:mysql://主机ip:mysql服务端端口号/数据库名称?其他k=v</code></p><p>MySQL默认端口是3306（也可以自己指定），其他k=v是字符集，采用默认的就行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token string">&quot;jdbc:mysql://localhost:3306/test?&quot;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-用户名、密码" tabindex="-1"><a class="header-anchor" href="#_3-用户名、密码" aria-hidden="true">#</a> 3. 用户名、密码</h4><p>user,password可以用 <code>属性名=属性值</code> 方式告诉数据库</p><h2 id="iii-连接数据库" tabindex="-1"><a class="header-anchor" href="#iii-连接数据库" aria-hidden="true">#</a> Ⅲ. 连接数据库</h2><p>有5种方法，以下5中方法是循序渐进的，用的时候直接用第五种即可。</p><h4 id="_1-方式1-使用mysql驱动的api连接" tabindex="-1"><a class="header-anchor" href="#_1-方式1-使用mysql驱动的api连接" aria-hidden="true">#</a> 1. 方式1：使用MySQL驱动的API连接</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">connectionDB1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.初始化驱动：Driver接口实现类com.mysql.jdbc.Driver的对象</span>
    <span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//2. 提供URL</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/test&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">//3.提供用户名和密码：使用Properties对象</span>
    <span class="token class-name">Properties</span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//4.调用driver的connect()，获取连接对象</span>
    <span class="token comment">//connect方法的第二个参数就是Properties类，因此必须以该类储存账号和密码信息</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> driver<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Properties类：Properties 继承于 Hashtable。表示一个持久的属性集.属性列表中每个键及其对应值都是一个字符串。</li><li>弊端：出现了第三方API com.mysql.jdbc.Driver，失去了移植性。</li></ul><h4 id="_2-方式2-使用反射-不体现第三方api" tabindex="-1"><a class="header-anchor" href="#_2-方式2-使用反射-不体现第三方api" aria-hidden="true">#</a> 2. 方式2：使用反射，不体现第三方API</h4><p>方式1获取Driver实现类的时候使用了第三方API，失去了移植性。</p><p>可以使用反射，来隐藏第三方api</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//1.使用反射初始化驱动</span>
<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> driverClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> driver <span class="token operator">=</span> driverClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">//后续的操作同方式1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：newInstance已经被jdk舍弃了。</p><h4 id="_3-方式3-使用drivermanager" tabindex="-1"><a class="header-anchor" href="#_3-方式3-使用drivermanager" aria-hidden="true">#</a> 3. 方式3：使用DriverManager</h4><p>使用DriverManager类替换Driver</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.使用反射获取Driver实现类的对象</span>
    <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//2.提供另外三个连接的基本信息：</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/test&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;abc123&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">//3.注册驱动</span>
    <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//4.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-方式4-省略驱动的注册" tabindex="-1"><a class="header-anchor" href="#_4-方式4-省略驱动的注册" aria-hidden="true">#</a> 4. 方式4：省略驱动的注册</h4><p>驱动会自动注册的，可以省略驱动的注册，只进行驱动的加载即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.Driver的实现类不用获取了,因为驱动不用注册...</span>
    <span class="token comment">// 2.提供三个连接的基本信息：</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/test&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;abc123&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">//3.驱动注册可以省略,会自动注册...</span>
    
    <span class="token comment">//3.1 将1和3连在一起，只加载驱动即可</span>
        <span class="token class-name">Class<span class="token punctuation">.</span>ForName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//4.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-方式5-将连接方式写入配置文件让驱动加载【最终方案】" tabindex="-1"><a class="header-anchor" href="#_5-方式5-将连接方式写入配置文件让驱动加载【最终方案】" aria-hidden="true">#</a> 5. 方式5：将连接方式写入配置文件让驱动加载【最终方案】</h4><p>使用配置文件的方式保存配置信息，在代码中加载配置文件。数据库连接的三个要素，都可以保存到配置文件中</p><h5 id="_5-1-配置文件" tabindex="-1"><a class="header-anchor" href="#_5-1-配置文件" aria-hidden="true">#</a> 5.1 配置文件</h5><ul><li>位置：配置文件声明在工程的src目录下</li><li>文件名：jdbc.properties</li></ul><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">user</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">password</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/test</span>
<span class="token key attr-name">driverClass</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.cj.jdbc.Driver</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-2-代码" tabindex="-1"><a class="header-anchor" href="#_5-2-代码" aria-hidden="true">#</a> 5.2 代码</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">connectionDB1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.加载配置文件：使用ClassLoader和Properties类</span>
    <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token class-name">ConnectionTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Properties</span> pros <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pros<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//2.读取配置信息</span>
    <span class="token class-name">String</span> user <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> password <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> driverClass <span class="token operator">=</span> pros<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;driverClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//3.加载驱动：使用Class类的forName方法根据全类名参数创建对象</span>
    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driverClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//4.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-使用配置文件的好处" tabindex="-1"><a class="header-anchor" href="#_5-3-使用配置文件的好处" aria-hidden="true">#</a> 5.3 使用配置文件的好处</h5><ul><li>实现了代码和数据的分离，如果需要修改配置信息，直接在配置文件中修改，不需要深入代码</li><li>如果修改了配置信息，省去重新编译的过程</li></ul>`,49);function h(g,f){const e=p("ExternalLinkIcon");return o(),c("div",null,[v,n("p",null,[s("选择："),n("a",m,[s("Platform Independent"),i(e)])]),b])}const j=t(k,[["render",h],["__file","1-2.连接数据库.html.vue"]]);export{j as default};
