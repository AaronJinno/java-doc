import{_ as a,o as n,c as s,e}from"./app-0fd18ae5.js";const t={},o=e(`<h4 id="_1-依赖" tabindex="-1"><a class="header-anchor" href="#_1-依赖" aria-hidden="true">#</a> 1. 依赖</h4><p>一般采用springboot data 整合的MongoDB</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- mongodb --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-application-yml" tabindex="-1"><a class="header-anchor" href="#_2-application-yml" aria-hidden="true">#</a> 2. application.yml</h4><p>主要配置MongoDB的连接参数。</p><p>有两种连接方式：</p><ul><li>URI：直接使用连接的URI进行连接，这个URI和MongoDB Compass连接信息里的URI基本是一样的 <ul><li>推荐这种，配置项更简洁</li><li>URI可以是单例也可以是MongoDB，比较方便</li></ul></li><li>选项链接：列出连接数据库的各个选项进行链接</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># URI链接</span>


<span class="token comment"># 选项连接的方式</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">data</span><span class="token punctuation">:</span>
    <span class="token key atrule">mongodb</span><span class="token punctuation">:</span>
      <span class="token key atrule">database</span><span class="token punctuation">:</span> article
    <span class="token comment"># username: blog</span>
    <span class="token comment"># password: 1234</span>
      <span class="token key atrule">host</span><span class="token punctuation">:</span> 159.75.225.162
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="uri的格式" tabindex="-1"><a class="header-anchor" href="#uri的格式" aria-hidden="true">#</a> URI的格式</h5><p>在Java中使用MongoDB需要指明操作的库，且库要提前创建好</p><ul><li>无密码单例：<code>mongodb://ip:port/数据库名</code></li><li>有密码单例：<code>mongodb://username:password@ip:port/数据库名</code></li><li>mongodb://username:password@ip:port,ip:port,ip:port/数据库名</li></ul><h4 id="_3-密码的验证" tabindex="-1"><a class="header-anchor" href="#_3-密码的验证" aria-hidden="true">#</a> 3. 密码的验证</h4><p>当服务器开启密码验证时，连接服务器就需要用户名和密码了。</p><h5 id="_3-1-用户名和数据库匹配" tabindex="-1"><a class="header-anchor" href="#_3-1-用户名和数据库匹配" aria-hidden="true">#</a> 3.1 用户名和数据库匹配</h5><h5 id="_3-2-密码验证的方式" tabindex="-1"><a class="header-anchor" href="#_3-2-密码验证的方式" aria-hidden="true">#</a> 3.2 密码验证的方式</h5><p>db.system.version.findOne({&quot;_id&quot;:&quot;authSchema&quot;})</p><p>{<br> _id: &#39;authSchema&#39;,<br> currentVersion: 5<br> }</p><p>db.system.version.updateOne({<br> {_id:&quot;authSchema&quot;},<br> {<br> $set:{<br> currentVersion:3<br> }<br> }<br> })</p><p>db.system.version.update({&quot;_id&quot;:&quot;authSchema&quot;},{$set:{&quot;currentVersion&quot;:5}})</p>`,19),i=[o];function p(l,c){return n(),s("div",null,i)}const d=a(t,[["render",p],["__file","4-4.MongoDB.html.vue"]]);export{d as default};
