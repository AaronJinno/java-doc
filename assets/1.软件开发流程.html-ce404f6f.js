import{_ as a,o as i,c as e,e as r}from"./app-4816a6c6.js";const d="/java-doc/img/guide/dev/1-1.png",n="/java-doc/img/dev/软件开发指南/1-1.png",t="/java-doc/img/dev/软件开发指南/1-2.png",h="/java-doc/img/dev/软件开发指南/1-3.png",c="/java-doc/img/dev/软件开发指南/1-4.png",o="/java-doc/img/dev/软件开发指南/1-5.png",s="/java-doc/img/dev/软件开发指南/1-6.png",g={},p=r('<figure><img src="'+d+'" alt="1-1" tabindex="0" loading="lazy"><figcaption>1-1</figcaption></figure><h2 id="第1阶段-需求分析" tabindex="-1"><a class="header-anchor" href="#第1阶段-需求分析" aria-hidden="true">#</a> 第1阶段：需求分析</h2><p>完成需求规格说明书、产品原型编写。</p><h4 id="规格说明书" tabindex="-1"><a class="header-anchor" href="#规格说明书" aria-hidden="true">#</a> 规格说明书</h4><p>需求规格说明书， 一般来说就是使用 Word 文档来描述当前项目的各个组成部分，如：系统定义、应用环境、功能规格、性能需求等，都会在文档中描述。</p><figure><img src="'+n+'" alt="1-1" tabindex="0" loading="lazy"><figcaption>1-1</figcaption></figure><h4 id="产品原型" tabindex="-1"><a class="header-anchor" href="#产品原型" aria-hidden="true">#</a> 产品原型</h4><p>一般是通过网页(html)的形式展示当前的页面展示什么样的数据, 页面的布局是什么样子的，点击某个菜单，打开什么页面，点击某个按钮，出现什么效果，都可以通过产品原型看到。</p><figure><img src="'+t+'" alt="1-2" tabindex="0" loading="lazy"><figcaption>1-2</figcaption></figure><h2 id="第2阶段-设计" tabindex="-1"><a class="header-anchor" href="#第2阶段-设计" aria-hidden="true">#</a> 第2阶段：设计</h2><p>设计的内容包含 UI设计、数据库设计、接口设计。</p><h4 id="ui设计" tabindex="-1"><a class="header-anchor" href="#ui设计" aria-hidden="true">#</a> UI设计</h4><p>用户界面的设计，主要设计项目的页面效果，小到一个按钮，大到一个页面布局，还有人机交互逻辑的体现。</p><figure><img src="'+h+'" alt="1-3" tabindex="0" loading="lazy"><figcaption>1-3</figcaption></figure><h4 id="数据库设计" tabindex="-1"><a class="header-anchor" href="#数据库设计" aria-hidden="true">#</a> 数据库设计</h4><p>需要设计当前项目中涉及到哪些数据库，每一个数据库里面包含哪些表，这些表结构之间的关系是什么样的，表结构中包含哪些字段。</p><figure><img src="'+c+'" alt="1-4" tabindex="0" loading="lazy"><figcaption>1-4</figcaption></figure><h4 id="接口设计" tabindex="-1"><a class="header-anchor" href="#接口设计" aria-hidden="true">#</a> 接口设计</h4><p>通过分析原型图，首先，粗粒度地分析每个页面有多少接口，然后，再细粒度地分析每个接口的传入参数，返回值参数，同时明确接口路径及请求方式。</p><figure><img src="'+o+'" alt="1-5" tabindex="0" loading="lazy"><figcaption>1-5</figcaption></figure><h2 id="第3阶段-编码" tabindex="-1"><a class="header-anchor" href="#第3阶段-编码" aria-hidden="true">#</a> 第3阶段: 编码</h2><p>编写项目代码、并完成单元测试。</p><h4 id="项目代码编写" tabindex="-1"><a class="header-anchor" href="#项目代码编写" aria-hidden="true">#</a> 项目代码编写</h4><p>作为软件开发工程师，我们需要对项目的模块功能分析后，进行编码实现。</p><h4 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试" aria-hidden="true">#</a> 单元测试</h4><p>编码实现完毕后，进行单元测试，单元测试通过后再进入到下一阶段。</p><figure><img src="'+s+'" alt="1-6" tabindex="0" loading="lazy"><figcaption>1-6</figcaption></figure><p>注意：单元测试是有开发者进行的基本debug测试，并非项目测试</p><h2 id="第4阶段-测试" tabindex="-1"><a class="header-anchor" href="#第4阶段-测试" aria-hidden="true">#</a> 第4阶段: 测试</h2><p>在该阶段中主要由测试人员, 对部署在测试环境的项目进行功能测试, 并出具测试报告。</p><h2 id="第5阶段-上线运维" tabindex="-1"><a class="header-anchor" href="#第5阶段-上线运维" aria-hidden="true">#</a> 第5阶段: 上线运维</h2><p>在项目上线之前， 会由运维人员准备服务器上的软件环境安装、配置， 配置完毕后，再将我们开发好的项目，部署在服务器上运行。</p>',32),f=[p];function l(_,u){return i(),e("div",null,f)}const x=a(g,[["render",l],["__file","1.软件开发流程.html.vue"]]);export{x as default};
